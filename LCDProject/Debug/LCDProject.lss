
LCDProject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000012  00800100  0000073e  000007d2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000073e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800112  00800112  000007e4  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000007e4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000840  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000050  00000000  00000000  00000880  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000098c  00000000  00000000  000008d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000757  00000000  00000000  0000125c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003ce  00000000  00000000  000019b3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000ac  00000000  00000000  00001d84  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003e3  00000000  00000000  00001e30  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000013c  00000000  00000000  00002213  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000040  00000000  00000000  0000234f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ee e3       	ldi	r30, 0x3E	; 62
  7c:	f7 e0       	ldi	r31, 0x07	; 7
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 31       	cpi	r26, 0x12	; 18
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a2 e1       	ldi	r26, 0x12	; 18
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a8 31       	cpi	r26, 0x18	; 24
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 99 00 	call	0x132	; 0x132 <main>
  9e:	0c 94 9d 03 	jmp	0x73a	; 0x73a <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <powerON>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  a6:	2f ef       	ldi	r18, 0xFF	; 255
  a8:	80 e7       	ldi	r24, 0x70	; 112
  aa:	92 e0       	ldi	r25, 0x02	; 2
  ac:	21 50       	subi	r18, 0x01	; 1
  ae:	80 40       	sbci	r24, 0x00	; 0
  b0:	90 40       	sbci	r25, 0x00	; 0
  b2:	e1 f7       	brne	.-8      	; 0xac <powerON+0x6>
  b4:	00 c0       	rjmp	.+0      	; 0xb6 <powerON+0x10>
  b6:	00 00       	nop
}

// debug
void powerON(){
	_delay_ms(100);
	PINC |= (1<<LedGreen);
  b8:	33 9a       	sbi	0x06, 3	; 6
  ba:	08 95       	ret

000000bc <enable>:

//Enable
void enable(){
	// switch it on and off 
	//to receive a command
	LCDControl |= (1 << LCDEnable);
  bc:	42 9a       	sbi	0x08, 2	; 8
	asm volatile("nop");
  be:	00 00       	nop
	asm volatile("nop");
  c0:	00 00       	nop
	LCDControl &= ~(1 << LCDEnable);
  c2:	42 98       	cbi	0x08, 2	; 8
  c4:	08 95       	ret

000000c6 <checkStatus>:
		powerON();
    }
}
//reading input
void checkStatus(){	
	DataDirMain = 0; //set to input ? change to the right way later
  c6:	1a b8       	out	0x0a, r1	; 10
	LCDControl |= 1 << LCDReadWrite;
  c8:	41 9a       	sbi	0x08, 1	; 8
	LCDControl &= ~(1 << LCDRegistorSelect);
  ca:	40 98       	cbi	0x08, 0	; 8
	  while (LCDMain >= BUZZY)
  cc:	5f 9b       	sbis	0x0b, 7	; 11
  ce:	04 c0       	rjmp	.+8      	; 0xd8 <checkStatus+0x12>
	  {
		enable();
  d0:	0e 94 5e 00 	call	0xbc	; 0xbc <enable>
//reading input
void checkStatus(){	
	DataDirMain = 0; //set to input ? change to the right way later
	LCDControl |= 1 << LCDReadWrite;
	LCDControl &= ~(1 << LCDRegistorSelect);
	  while (LCDMain >= BUZZY)
  d4:	5f 99       	sbic	0x0b, 7	; 11
  d6:	fc cf       	rjmp	.-8      	; 0xd0 <checkStatus+0xa>
	  {
		enable();
	  }
	DataDirMain = 0xFF; // set all I/O pins to OUTPUT 0b11111111
  d8:	8f ef       	ldi	r24, 0xFF	; 255
  da:	8a b9       	out	0x0a, r24	; 10
  dc:	08 95       	ret

000000de <sendCommand>:
	asm volatile("nop");
	LCDControl &= ~(1 << LCDEnable);
	//to do a command
}
//output
void sendCommand(unsigned char cmd){
  de:	cf 93       	push	r28
  e0:	c8 2f       	mov	r28, r24
	checkStatus();
  e2:	0e 94 63 00 	call	0xc6	; 0xc6 <checkStatus>
	LCDMain = cmd; 
  e6:	cb b9       	out	0x0b, r28	; 11
	LCDControl &= ~((1 << LCDReadWrite) | (1 << LCDRegistorSelect));
  e8:	88 b1       	in	r24, 0x08	; 8
  ea:	8c 7f       	andi	r24, 0xFC	; 252
  ec:	88 b9       	out	0x08, r24	; 8
	enable();
  ee:	0e 94 5e 00 	call	0xbc	; 0xbc <enable>
	LCDMain = 0;
  f2:	1b b8       	out	0x0b, r1	; 11
}
  f4:	cf 91       	pop	r28
  f6:	08 95       	ret

000000f8 <sendCharacter>:
//output
void sendCharacter(unsigned char c){
  f8:	cf 93       	push	r28
  fa:	c8 2f       	mov	r28, r24
	checkStatus();
  fc:	0e 94 63 00 	call	0xc6	; 0xc6 <checkStatus>
	LCDMain = c;
 100:	cb b9       	out	0x0b, r28	; 11
	LCDControl &= ~(1 << LCDReadWrite);
 102:	41 98       	cbi	0x08, 1	; 8
	LCDControl |= 1 << LCDRegistorSelect;
 104:	40 9a       	sbi	0x08, 0	; 8
	enable();
 106:	0e 94 5e 00 	call	0xbc	; 0xbc <enable>
	LCDMain = 0;
 10a:	1b b8       	out	0x0b, r1	; 11
}
 10c:	cf 91       	pop	r28
 10e:	08 95       	ret

00000110 <sendString>:
//output
void sendString(char *stringOfChars){
 110:	cf 93       	push	r28
 112:	df 93       	push	r29
 114:	ec 01       	movw	r28, r24
	checkStatus();
 116:	0e 94 63 00 	call	0xc6	; 0xc6 <checkStatus>
	while(*stringOfChars > 0){
 11a:	88 81       	ld	r24, Y
 11c:	88 23       	and	r24, r24
 11e:	31 f0       	breq	.+12     	; 0x12c <sendString+0x1c>
 120:	21 96       	adiw	r28, 0x01	; 1
		sendCharacter(*stringOfChars++);
 122:	0e 94 7c 00 	call	0xf8	; 0xf8 <sendCharacter>
	LCDMain = 0;
}
//output
void sendString(char *stringOfChars){
	checkStatus();
	while(*stringOfChars > 0){
 126:	89 91       	ld	r24, Y+
 128:	81 11       	cpse	r24, r1
 12a:	fb cf       	rjmp	.-10     	; 0x122 <sendString+0x12>
		sendCharacter(*stringOfChars++);
	}
}
 12c:	df 91       	pop	r29
 12e:	cf 91       	pop	r28
 130:	08 95       	ret

00000132 <main>:
/************************************************************************/
/*main*/
/************************************************************************/
int main(void)
{
	printf("Running!");
 132:	80 e0       	ldi	r24, 0x00	; 0
 134:	91 e0       	ldi	r25, 0x01	; 1
 136:	9f 93       	push	r25
 138:	8f 93       	push	r24
 13a:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <printf>
	// sets all DDRC data direction ports to output bit[1] 
	DataDirControl |= 1 << LCDEnable | 1 << LCDReadWrite | 1 << LCDRegistorSelect | 1 << LedGreen;
 13e:	87 b1       	in	r24, 0x07	; 7
 140:	8f 60       	ori	r24, 0x0F	; 15
 142:	87 b9       	out	0x07, r24	; 7
 144:	8f e2       	ldi	r24, 0x2F	; 47
 146:	95 e7       	ldi	r25, 0x75	; 117
 148:	01 97       	sbiw	r24, 0x01	; 1
 14a:	f1 f7       	brne	.-4      	; 0x148 <main+0x16>
 14c:	00 c0       	rjmp	.+0      	; 0x14e <main+0x1c>
 14e:	00 00       	nop
	_delay_ms(15);
    /* Replace with your application code */
	sendCommand(CLEARSCREEN);
 150:	81 e0       	ldi	r24, 0x01	; 1
 152:	0e 94 6f 00 	call	0xde	; 0xde <sendCommand>
 156:	8f e9       	ldi	r24, 0x9F	; 159
 158:	9f e0       	ldi	r25, 0x0F	; 15
 15a:	01 97       	sbiw	r24, 0x01	; 1
 15c:	f1 f7       	brne	.-4      	; 0x15a <main+0x28>
 15e:	00 c0       	rjmp	.+0      	; 0x160 <main+0x2e>
 160:	00 00       	nop
	_delay_ms(2);
	sendCommand(BITMODE8BIT);
 162:	88 e3       	ldi	r24, 0x38	; 56
 164:	0e 94 6f 00 	call	0xde	; 0xde <sendCommand>
 168:	9f e7       	ldi	r25, 0x7F	; 127
 16a:	28 e3       	ldi	r18, 0x38	; 56
 16c:	81 e0       	ldi	r24, 0x01	; 1
 16e:	91 50       	subi	r25, 0x01	; 1
 170:	20 40       	sbci	r18, 0x00	; 0
 172:	80 40       	sbci	r24, 0x00	; 0
 174:	e1 f7       	brne	.-8      	; 0x16e <main+0x3c>
 176:	00 c0       	rjmp	.+0      	; 0x178 <main+0x46>
 178:	00 00       	nop
	_delay_ms(50);
	sendCommand(LCDONBlink);
 17a:	8f e0       	ldi	r24, 0x0F	; 15
 17c:	0e 94 6f 00 	call	0xde	; 0xde <sendCommand>
 180:	9f e7       	ldi	r25, 0x7F	; 127
 182:	28 e3       	ldi	r18, 0x38	; 56
 184:	81 e0       	ldi	r24, 0x01	; 1
 186:	91 50       	subi	r25, 0x01	; 1
 188:	20 40       	sbci	r18, 0x00	; 0
 18a:	80 40       	sbci	r24, 0x00	; 0
 18c:	e1 f7       	brne	.-8      	; 0x186 <main+0x54>
 18e:	00 c0       	rjmp	.+0      	; 0x190 <main+0x5e>
 190:	00 00       	nop
	_delay_ms(50);
	sendString("piershaw");
 192:	89 e0       	ldi	r24, 0x09	; 9
 194:	91 e0       	ldi	r25, 0x01	; 1
 196:	0e 94 88 00 	call	0x110	; 0x110 <sendString>
 19a:	0f 90       	pop	r0
 19c:	0f 90       	pop	r0
	
    while (1) 
    {
		powerON();
 19e:	0e 94 53 00 	call	0xa6	; 0xa6 <powerON>
    }
 1a2:	fd cf       	rjmp	.-6      	; 0x19e <main+0x6c>

000001a4 <printf>:
 1a4:	a0 e0       	ldi	r26, 0x00	; 0
 1a6:	b0 e0       	ldi	r27, 0x00	; 0
 1a8:	e8 ed       	ldi	r30, 0xD8	; 216
 1aa:	f0 e0       	ldi	r31, 0x00	; 0
 1ac:	0c 94 76 03 	jmp	0x6ec	; 0x6ec <__prologue_saves__+0x20>
 1b0:	ae 01       	movw	r20, r28
 1b2:	4b 5f       	subi	r20, 0xFB	; 251
 1b4:	5f 4f       	sbci	r21, 0xFF	; 255
 1b6:	fa 01       	movw	r30, r20
 1b8:	61 91       	ld	r22, Z+
 1ba:	71 91       	ld	r23, Z+
 1bc:	af 01       	movw	r20, r30
 1be:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <__data_end+0x2>
 1c2:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <__data_end+0x3>
 1c6:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <vfprintf>
 1ca:	e2 e0       	ldi	r30, 0x02	; 2
 1cc:	0c 94 92 03 	jmp	0x724	; 0x724 <__epilogue_restores__+0x20>

000001d0 <vfprintf>:
 1d0:	ac e0       	ldi	r26, 0x0C	; 12
 1d2:	b0 e0       	ldi	r27, 0x00	; 0
 1d4:	ee ee       	ldi	r30, 0xEE	; 238
 1d6:	f0 e0       	ldi	r31, 0x00	; 0
 1d8:	0c 94 66 03 	jmp	0x6cc	; 0x6cc <__prologue_saves__>
 1dc:	7c 01       	movw	r14, r24
 1de:	6b 01       	movw	r12, r22
 1e0:	8a 01       	movw	r16, r20
 1e2:	fc 01       	movw	r30, r24
 1e4:	17 82       	std	Z+7, r1	; 0x07
 1e6:	16 82       	std	Z+6, r1	; 0x06
 1e8:	83 81       	ldd	r24, Z+3	; 0x03
 1ea:	81 ff       	sbrs	r24, 1
 1ec:	bd c1       	rjmp	.+890    	; 0x568 <__LOCK_REGION_LENGTH__+0x168>
 1ee:	ce 01       	movw	r24, r28
 1f0:	01 96       	adiw	r24, 0x01	; 1
 1f2:	4c 01       	movw	r8, r24
 1f4:	f7 01       	movw	r30, r14
 1f6:	93 81       	ldd	r25, Z+3	; 0x03
 1f8:	f6 01       	movw	r30, r12
 1fa:	93 fd       	sbrc	r25, 3
 1fc:	85 91       	lpm	r24, Z+
 1fe:	93 ff       	sbrs	r25, 3
 200:	81 91       	ld	r24, Z+
 202:	6f 01       	movw	r12, r30
 204:	88 23       	and	r24, r24
 206:	09 f4       	brne	.+2      	; 0x20a <vfprintf+0x3a>
 208:	ab c1       	rjmp	.+854    	; 0x560 <__LOCK_REGION_LENGTH__+0x160>
 20a:	85 32       	cpi	r24, 0x25	; 37
 20c:	39 f4       	brne	.+14     	; 0x21c <vfprintf+0x4c>
 20e:	93 fd       	sbrc	r25, 3
 210:	85 91       	lpm	r24, Z+
 212:	93 ff       	sbrs	r25, 3
 214:	81 91       	ld	r24, Z+
 216:	6f 01       	movw	r12, r30
 218:	85 32       	cpi	r24, 0x25	; 37
 21a:	29 f4       	brne	.+10     	; 0x226 <vfprintf+0x56>
 21c:	b7 01       	movw	r22, r14
 21e:	90 e0       	ldi	r25, 0x00	; 0
 220:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <fputc>
 224:	e7 cf       	rjmp	.-50     	; 0x1f4 <vfprintf+0x24>
 226:	51 2c       	mov	r5, r1
 228:	31 2c       	mov	r3, r1
 22a:	20 e0       	ldi	r18, 0x00	; 0
 22c:	20 32       	cpi	r18, 0x20	; 32
 22e:	a0 f4       	brcc	.+40     	; 0x258 <vfprintf+0x88>
 230:	8b 32       	cpi	r24, 0x2B	; 43
 232:	69 f0       	breq	.+26     	; 0x24e <vfprintf+0x7e>
 234:	30 f4       	brcc	.+12     	; 0x242 <vfprintf+0x72>
 236:	80 32       	cpi	r24, 0x20	; 32
 238:	59 f0       	breq	.+22     	; 0x250 <vfprintf+0x80>
 23a:	83 32       	cpi	r24, 0x23	; 35
 23c:	69 f4       	brne	.+26     	; 0x258 <vfprintf+0x88>
 23e:	20 61       	ori	r18, 0x10	; 16
 240:	2c c0       	rjmp	.+88     	; 0x29a <vfprintf+0xca>
 242:	8d 32       	cpi	r24, 0x2D	; 45
 244:	39 f0       	breq	.+14     	; 0x254 <vfprintf+0x84>
 246:	80 33       	cpi	r24, 0x30	; 48
 248:	39 f4       	brne	.+14     	; 0x258 <vfprintf+0x88>
 24a:	21 60       	ori	r18, 0x01	; 1
 24c:	26 c0       	rjmp	.+76     	; 0x29a <vfprintf+0xca>
 24e:	22 60       	ori	r18, 0x02	; 2
 250:	24 60       	ori	r18, 0x04	; 4
 252:	23 c0       	rjmp	.+70     	; 0x29a <vfprintf+0xca>
 254:	28 60       	ori	r18, 0x08	; 8
 256:	21 c0       	rjmp	.+66     	; 0x29a <vfprintf+0xca>
 258:	27 fd       	sbrc	r18, 7
 25a:	27 c0       	rjmp	.+78     	; 0x2aa <vfprintf+0xda>
 25c:	30 ed       	ldi	r19, 0xD0	; 208
 25e:	38 0f       	add	r19, r24
 260:	3a 30       	cpi	r19, 0x0A	; 10
 262:	78 f4       	brcc	.+30     	; 0x282 <vfprintf+0xb2>
 264:	26 ff       	sbrs	r18, 6
 266:	06 c0       	rjmp	.+12     	; 0x274 <vfprintf+0xa4>
 268:	fa e0       	ldi	r31, 0x0A	; 10
 26a:	5f 9e       	mul	r5, r31
 26c:	30 0d       	add	r19, r0
 26e:	11 24       	eor	r1, r1
 270:	53 2e       	mov	r5, r19
 272:	13 c0       	rjmp	.+38     	; 0x29a <vfprintf+0xca>
 274:	8a e0       	ldi	r24, 0x0A	; 10
 276:	38 9e       	mul	r3, r24
 278:	30 0d       	add	r19, r0
 27a:	11 24       	eor	r1, r1
 27c:	33 2e       	mov	r3, r19
 27e:	20 62       	ori	r18, 0x20	; 32
 280:	0c c0       	rjmp	.+24     	; 0x29a <vfprintf+0xca>
 282:	8e 32       	cpi	r24, 0x2E	; 46
 284:	21 f4       	brne	.+8      	; 0x28e <vfprintf+0xbe>
 286:	26 fd       	sbrc	r18, 6
 288:	6b c1       	rjmp	.+726    	; 0x560 <__LOCK_REGION_LENGTH__+0x160>
 28a:	20 64       	ori	r18, 0x40	; 64
 28c:	06 c0       	rjmp	.+12     	; 0x29a <vfprintf+0xca>
 28e:	8c 36       	cpi	r24, 0x6C	; 108
 290:	11 f4       	brne	.+4      	; 0x296 <vfprintf+0xc6>
 292:	20 68       	ori	r18, 0x80	; 128
 294:	02 c0       	rjmp	.+4      	; 0x29a <vfprintf+0xca>
 296:	88 36       	cpi	r24, 0x68	; 104
 298:	41 f4       	brne	.+16     	; 0x2aa <vfprintf+0xda>
 29a:	f6 01       	movw	r30, r12
 29c:	93 fd       	sbrc	r25, 3
 29e:	85 91       	lpm	r24, Z+
 2a0:	93 ff       	sbrs	r25, 3
 2a2:	81 91       	ld	r24, Z+
 2a4:	6f 01       	movw	r12, r30
 2a6:	81 11       	cpse	r24, r1
 2a8:	c1 cf       	rjmp	.-126    	; 0x22c <vfprintf+0x5c>
 2aa:	98 2f       	mov	r25, r24
 2ac:	9f 7d       	andi	r25, 0xDF	; 223
 2ae:	95 54       	subi	r25, 0x45	; 69
 2b0:	93 30       	cpi	r25, 0x03	; 3
 2b2:	28 f4       	brcc	.+10     	; 0x2be <vfprintf+0xee>
 2b4:	0c 5f       	subi	r16, 0xFC	; 252
 2b6:	1f 4f       	sbci	r17, 0xFF	; 255
 2b8:	ff e3       	ldi	r31, 0x3F	; 63
 2ba:	f9 83       	std	Y+1, r31	; 0x01
 2bc:	0d c0       	rjmp	.+26     	; 0x2d8 <vfprintf+0x108>
 2be:	83 36       	cpi	r24, 0x63	; 99
 2c0:	31 f0       	breq	.+12     	; 0x2ce <vfprintf+0xfe>
 2c2:	83 37       	cpi	r24, 0x73	; 115
 2c4:	71 f0       	breq	.+28     	; 0x2e2 <vfprintf+0x112>
 2c6:	83 35       	cpi	r24, 0x53	; 83
 2c8:	09 f0       	breq	.+2      	; 0x2cc <vfprintf+0xfc>
 2ca:	5b c0       	rjmp	.+182    	; 0x382 <vfprintf+0x1b2>
 2cc:	22 c0       	rjmp	.+68     	; 0x312 <vfprintf+0x142>
 2ce:	f8 01       	movw	r30, r16
 2d0:	80 81       	ld	r24, Z
 2d2:	89 83       	std	Y+1, r24	; 0x01
 2d4:	0e 5f       	subi	r16, 0xFE	; 254
 2d6:	1f 4f       	sbci	r17, 0xFF	; 255
 2d8:	44 24       	eor	r4, r4
 2da:	43 94       	inc	r4
 2dc:	51 2c       	mov	r5, r1
 2de:	54 01       	movw	r10, r8
 2e0:	15 c0       	rjmp	.+42     	; 0x30c <vfprintf+0x13c>
 2e2:	38 01       	movw	r6, r16
 2e4:	f2 e0       	ldi	r31, 0x02	; 2
 2e6:	6f 0e       	add	r6, r31
 2e8:	71 1c       	adc	r7, r1
 2ea:	f8 01       	movw	r30, r16
 2ec:	a0 80       	ld	r10, Z
 2ee:	b1 80       	ldd	r11, Z+1	; 0x01
 2f0:	26 ff       	sbrs	r18, 6
 2f2:	03 c0       	rjmp	.+6      	; 0x2fa <vfprintf+0x12a>
 2f4:	65 2d       	mov	r22, r5
 2f6:	70 e0       	ldi	r23, 0x00	; 0
 2f8:	02 c0       	rjmp	.+4      	; 0x2fe <vfprintf+0x12e>
 2fa:	6f ef       	ldi	r22, 0xFF	; 255
 2fc:	7f ef       	ldi	r23, 0xFF	; 255
 2fe:	c5 01       	movw	r24, r10
 300:	2c 87       	std	Y+12, r18	; 0x0c
 302:	0e 94 c5 02 	call	0x58a	; 0x58a <strnlen>
 306:	2c 01       	movw	r4, r24
 308:	83 01       	movw	r16, r6
 30a:	2c 85       	ldd	r18, Y+12	; 0x0c
 30c:	2f 77       	andi	r18, 0x7F	; 127
 30e:	22 2e       	mov	r2, r18
 310:	17 c0       	rjmp	.+46     	; 0x340 <vfprintf+0x170>
 312:	38 01       	movw	r6, r16
 314:	f2 e0       	ldi	r31, 0x02	; 2
 316:	6f 0e       	add	r6, r31
 318:	71 1c       	adc	r7, r1
 31a:	f8 01       	movw	r30, r16
 31c:	a0 80       	ld	r10, Z
 31e:	b1 80       	ldd	r11, Z+1	; 0x01
 320:	26 ff       	sbrs	r18, 6
 322:	03 c0       	rjmp	.+6      	; 0x32a <vfprintf+0x15a>
 324:	65 2d       	mov	r22, r5
 326:	70 e0       	ldi	r23, 0x00	; 0
 328:	02 c0       	rjmp	.+4      	; 0x32e <vfprintf+0x15e>
 32a:	6f ef       	ldi	r22, 0xFF	; 255
 32c:	7f ef       	ldi	r23, 0xFF	; 255
 32e:	c5 01       	movw	r24, r10
 330:	2c 87       	std	Y+12, r18	; 0x0c
 332:	0e 94 ba 02 	call	0x574	; 0x574 <strnlen_P>
 336:	2c 01       	movw	r4, r24
 338:	2c 85       	ldd	r18, Y+12	; 0x0c
 33a:	20 68       	ori	r18, 0x80	; 128
 33c:	22 2e       	mov	r2, r18
 33e:	83 01       	movw	r16, r6
 340:	23 fc       	sbrc	r2, 3
 342:	1b c0       	rjmp	.+54     	; 0x37a <vfprintf+0x1aa>
 344:	83 2d       	mov	r24, r3
 346:	90 e0       	ldi	r25, 0x00	; 0
 348:	48 16       	cp	r4, r24
 34a:	59 06       	cpc	r5, r25
 34c:	b0 f4       	brcc	.+44     	; 0x37a <vfprintf+0x1aa>
 34e:	b7 01       	movw	r22, r14
 350:	80 e2       	ldi	r24, 0x20	; 32
 352:	90 e0       	ldi	r25, 0x00	; 0
 354:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <fputc>
 358:	3a 94       	dec	r3
 35a:	f4 cf       	rjmp	.-24     	; 0x344 <vfprintf+0x174>
 35c:	f5 01       	movw	r30, r10
 35e:	27 fc       	sbrc	r2, 7
 360:	85 91       	lpm	r24, Z+
 362:	27 fe       	sbrs	r2, 7
 364:	81 91       	ld	r24, Z+
 366:	5f 01       	movw	r10, r30
 368:	b7 01       	movw	r22, r14
 36a:	90 e0       	ldi	r25, 0x00	; 0
 36c:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <fputc>
 370:	31 10       	cpse	r3, r1
 372:	3a 94       	dec	r3
 374:	f1 e0       	ldi	r31, 0x01	; 1
 376:	4f 1a       	sub	r4, r31
 378:	51 08       	sbc	r5, r1
 37a:	41 14       	cp	r4, r1
 37c:	51 04       	cpc	r5, r1
 37e:	71 f7       	brne	.-36     	; 0x35c <vfprintf+0x18c>
 380:	e5 c0       	rjmp	.+458    	; 0x54c <__LOCK_REGION_LENGTH__+0x14c>
 382:	84 36       	cpi	r24, 0x64	; 100
 384:	11 f0       	breq	.+4      	; 0x38a <vfprintf+0x1ba>
 386:	89 36       	cpi	r24, 0x69	; 105
 388:	39 f5       	brne	.+78     	; 0x3d8 <vfprintf+0x208>
 38a:	f8 01       	movw	r30, r16
 38c:	27 ff       	sbrs	r18, 7
 38e:	07 c0       	rjmp	.+14     	; 0x39e <vfprintf+0x1ce>
 390:	60 81       	ld	r22, Z
 392:	71 81       	ldd	r23, Z+1	; 0x01
 394:	82 81       	ldd	r24, Z+2	; 0x02
 396:	93 81       	ldd	r25, Z+3	; 0x03
 398:	0c 5f       	subi	r16, 0xFC	; 252
 39a:	1f 4f       	sbci	r17, 0xFF	; 255
 39c:	08 c0       	rjmp	.+16     	; 0x3ae <vfprintf+0x1de>
 39e:	60 81       	ld	r22, Z
 3a0:	71 81       	ldd	r23, Z+1	; 0x01
 3a2:	07 2e       	mov	r0, r23
 3a4:	00 0c       	add	r0, r0
 3a6:	88 0b       	sbc	r24, r24
 3a8:	99 0b       	sbc	r25, r25
 3aa:	0e 5f       	subi	r16, 0xFE	; 254
 3ac:	1f 4f       	sbci	r17, 0xFF	; 255
 3ae:	2f 76       	andi	r18, 0x6F	; 111
 3b0:	72 2e       	mov	r7, r18
 3b2:	97 ff       	sbrs	r25, 7
 3b4:	09 c0       	rjmp	.+18     	; 0x3c8 <vfprintf+0x1f8>
 3b6:	90 95       	com	r25
 3b8:	80 95       	com	r24
 3ba:	70 95       	com	r23
 3bc:	61 95       	neg	r22
 3be:	7f 4f       	sbci	r23, 0xFF	; 255
 3c0:	8f 4f       	sbci	r24, 0xFF	; 255
 3c2:	9f 4f       	sbci	r25, 0xFF	; 255
 3c4:	20 68       	ori	r18, 0x80	; 128
 3c6:	72 2e       	mov	r7, r18
 3c8:	2a e0       	ldi	r18, 0x0A	; 10
 3ca:	30 e0       	ldi	r19, 0x00	; 0
 3cc:	a4 01       	movw	r20, r8
 3ce:	0e 94 08 03 	call	0x610	; 0x610 <__ultoa_invert>
 3d2:	a8 2e       	mov	r10, r24
 3d4:	a8 18       	sub	r10, r8
 3d6:	44 c0       	rjmp	.+136    	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
 3d8:	85 37       	cpi	r24, 0x75	; 117
 3da:	29 f4       	brne	.+10     	; 0x3e6 <vfprintf+0x216>
 3dc:	2f 7e       	andi	r18, 0xEF	; 239
 3de:	b2 2e       	mov	r11, r18
 3e0:	2a e0       	ldi	r18, 0x0A	; 10
 3e2:	30 e0       	ldi	r19, 0x00	; 0
 3e4:	25 c0       	rjmp	.+74     	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 3e6:	f2 2f       	mov	r31, r18
 3e8:	f9 7f       	andi	r31, 0xF9	; 249
 3ea:	bf 2e       	mov	r11, r31
 3ec:	8f 36       	cpi	r24, 0x6F	; 111
 3ee:	c1 f0       	breq	.+48     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 3f0:	18 f4       	brcc	.+6      	; 0x3f8 <vfprintf+0x228>
 3f2:	88 35       	cpi	r24, 0x58	; 88
 3f4:	79 f0       	breq	.+30     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 3f6:	b4 c0       	rjmp	.+360    	; 0x560 <__LOCK_REGION_LENGTH__+0x160>
 3f8:	80 37       	cpi	r24, 0x70	; 112
 3fa:	19 f0       	breq	.+6      	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3fc:	88 37       	cpi	r24, 0x78	; 120
 3fe:	21 f0       	breq	.+8      	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 400:	af c0       	rjmp	.+350    	; 0x560 <__LOCK_REGION_LENGTH__+0x160>
 402:	2f 2f       	mov	r18, r31
 404:	20 61       	ori	r18, 0x10	; 16
 406:	b2 2e       	mov	r11, r18
 408:	b4 fe       	sbrs	r11, 4
 40a:	0d c0       	rjmp	.+26     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 40c:	8b 2d       	mov	r24, r11
 40e:	84 60       	ori	r24, 0x04	; 4
 410:	b8 2e       	mov	r11, r24
 412:	09 c0       	rjmp	.+18     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 414:	24 ff       	sbrs	r18, 4
 416:	0a c0       	rjmp	.+20     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 418:	9f 2f       	mov	r25, r31
 41a:	96 60       	ori	r25, 0x06	; 6
 41c:	b9 2e       	mov	r11, r25
 41e:	06 c0       	rjmp	.+12     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 420:	28 e0       	ldi	r18, 0x08	; 8
 422:	30 e0       	ldi	r19, 0x00	; 0
 424:	05 c0       	rjmp	.+10     	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 426:	20 e1       	ldi	r18, 0x10	; 16
 428:	30 e0       	ldi	r19, 0x00	; 0
 42a:	02 c0       	rjmp	.+4      	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 42c:	20 e1       	ldi	r18, 0x10	; 16
 42e:	32 e0       	ldi	r19, 0x02	; 2
 430:	f8 01       	movw	r30, r16
 432:	b7 fe       	sbrs	r11, 7
 434:	07 c0       	rjmp	.+14     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 436:	60 81       	ld	r22, Z
 438:	71 81       	ldd	r23, Z+1	; 0x01
 43a:	82 81       	ldd	r24, Z+2	; 0x02
 43c:	93 81       	ldd	r25, Z+3	; 0x03
 43e:	0c 5f       	subi	r16, 0xFC	; 252
 440:	1f 4f       	sbci	r17, 0xFF	; 255
 442:	06 c0       	rjmp	.+12     	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 444:	60 81       	ld	r22, Z
 446:	71 81       	ldd	r23, Z+1	; 0x01
 448:	80 e0       	ldi	r24, 0x00	; 0
 44a:	90 e0       	ldi	r25, 0x00	; 0
 44c:	0e 5f       	subi	r16, 0xFE	; 254
 44e:	1f 4f       	sbci	r17, 0xFF	; 255
 450:	a4 01       	movw	r20, r8
 452:	0e 94 08 03 	call	0x610	; 0x610 <__ultoa_invert>
 456:	a8 2e       	mov	r10, r24
 458:	a8 18       	sub	r10, r8
 45a:	fb 2d       	mov	r31, r11
 45c:	ff 77       	andi	r31, 0x7F	; 127
 45e:	7f 2e       	mov	r7, r31
 460:	76 fe       	sbrs	r7, 6
 462:	0b c0       	rjmp	.+22     	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 464:	37 2d       	mov	r19, r7
 466:	3e 7f       	andi	r19, 0xFE	; 254
 468:	a5 14       	cp	r10, r5
 46a:	50 f4       	brcc	.+20     	; 0x480 <__LOCK_REGION_LENGTH__+0x80>
 46c:	74 fe       	sbrs	r7, 4
 46e:	0a c0       	rjmp	.+20     	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
 470:	72 fc       	sbrc	r7, 2
 472:	08 c0       	rjmp	.+16     	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
 474:	37 2d       	mov	r19, r7
 476:	3e 7e       	andi	r19, 0xEE	; 238
 478:	05 c0       	rjmp	.+10     	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
 47a:	ba 2c       	mov	r11, r10
 47c:	37 2d       	mov	r19, r7
 47e:	03 c0       	rjmp	.+6      	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
 480:	ba 2c       	mov	r11, r10
 482:	01 c0       	rjmp	.+2      	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
 484:	b5 2c       	mov	r11, r5
 486:	34 ff       	sbrs	r19, 4
 488:	0d c0       	rjmp	.+26     	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
 48a:	fe 01       	movw	r30, r28
 48c:	ea 0d       	add	r30, r10
 48e:	f1 1d       	adc	r31, r1
 490:	80 81       	ld	r24, Z
 492:	80 33       	cpi	r24, 0x30	; 48
 494:	11 f4       	brne	.+4      	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
 496:	39 7e       	andi	r19, 0xE9	; 233
 498:	09 c0       	rjmp	.+18     	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
 49a:	32 ff       	sbrs	r19, 2
 49c:	06 c0       	rjmp	.+12     	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
 49e:	b3 94       	inc	r11
 4a0:	b3 94       	inc	r11
 4a2:	04 c0       	rjmp	.+8      	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
 4a4:	83 2f       	mov	r24, r19
 4a6:	86 78       	andi	r24, 0x86	; 134
 4a8:	09 f0       	breq	.+2      	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
 4aa:	b3 94       	inc	r11
 4ac:	33 fd       	sbrc	r19, 3
 4ae:	13 c0       	rjmp	.+38     	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
 4b0:	30 ff       	sbrs	r19, 0
 4b2:	06 c0       	rjmp	.+12     	; 0x4c0 <__LOCK_REGION_LENGTH__+0xc0>
 4b4:	5a 2c       	mov	r5, r10
 4b6:	b3 14       	cp	r11, r3
 4b8:	18 f4       	brcc	.+6      	; 0x4c0 <__LOCK_REGION_LENGTH__+0xc0>
 4ba:	53 0c       	add	r5, r3
 4bc:	5b 18       	sub	r5, r11
 4be:	b3 2c       	mov	r11, r3
 4c0:	b3 14       	cp	r11, r3
 4c2:	68 f4       	brcc	.+26     	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 4c4:	b7 01       	movw	r22, r14
 4c6:	80 e2       	ldi	r24, 0x20	; 32
 4c8:	90 e0       	ldi	r25, 0x00	; 0
 4ca:	3c 87       	std	Y+12, r19	; 0x0c
 4cc:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <fputc>
 4d0:	b3 94       	inc	r11
 4d2:	3c 85       	ldd	r19, Y+12	; 0x0c
 4d4:	f5 cf       	rjmp	.-22     	; 0x4c0 <__LOCK_REGION_LENGTH__+0xc0>
 4d6:	b3 14       	cp	r11, r3
 4d8:	10 f4       	brcc	.+4      	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 4da:	3b 18       	sub	r3, r11
 4dc:	01 c0       	rjmp	.+2      	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 4de:	31 2c       	mov	r3, r1
 4e0:	34 ff       	sbrs	r19, 4
 4e2:	12 c0       	rjmp	.+36     	; 0x508 <__LOCK_REGION_LENGTH__+0x108>
 4e4:	b7 01       	movw	r22, r14
 4e6:	80 e3       	ldi	r24, 0x30	; 48
 4e8:	90 e0       	ldi	r25, 0x00	; 0
 4ea:	3c 87       	std	Y+12, r19	; 0x0c
 4ec:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <fputc>
 4f0:	3c 85       	ldd	r19, Y+12	; 0x0c
 4f2:	32 ff       	sbrs	r19, 2
 4f4:	17 c0       	rjmp	.+46     	; 0x524 <__LOCK_REGION_LENGTH__+0x124>
 4f6:	31 fd       	sbrc	r19, 1
 4f8:	03 c0       	rjmp	.+6      	; 0x500 <__LOCK_REGION_LENGTH__+0x100>
 4fa:	88 e7       	ldi	r24, 0x78	; 120
 4fc:	90 e0       	ldi	r25, 0x00	; 0
 4fe:	02 c0       	rjmp	.+4      	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
 500:	88 e5       	ldi	r24, 0x58	; 88
 502:	90 e0       	ldi	r25, 0x00	; 0
 504:	b7 01       	movw	r22, r14
 506:	0c c0       	rjmp	.+24     	; 0x520 <__LOCK_REGION_LENGTH__+0x120>
 508:	83 2f       	mov	r24, r19
 50a:	86 78       	andi	r24, 0x86	; 134
 50c:	59 f0       	breq	.+22     	; 0x524 <__LOCK_REGION_LENGTH__+0x124>
 50e:	31 ff       	sbrs	r19, 1
 510:	02 c0       	rjmp	.+4      	; 0x516 <__LOCK_REGION_LENGTH__+0x116>
 512:	8b e2       	ldi	r24, 0x2B	; 43
 514:	01 c0       	rjmp	.+2      	; 0x518 <__LOCK_REGION_LENGTH__+0x118>
 516:	80 e2       	ldi	r24, 0x20	; 32
 518:	37 fd       	sbrc	r19, 7
 51a:	8d e2       	ldi	r24, 0x2D	; 45
 51c:	b7 01       	movw	r22, r14
 51e:	90 e0       	ldi	r25, 0x00	; 0
 520:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <fputc>
 524:	a5 14       	cp	r10, r5
 526:	38 f4       	brcc	.+14     	; 0x536 <__LOCK_REGION_LENGTH__+0x136>
 528:	b7 01       	movw	r22, r14
 52a:	80 e3       	ldi	r24, 0x30	; 48
 52c:	90 e0       	ldi	r25, 0x00	; 0
 52e:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <fputc>
 532:	5a 94       	dec	r5
 534:	f7 cf       	rjmp	.-18     	; 0x524 <__LOCK_REGION_LENGTH__+0x124>
 536:	aa 94       	dec	r10
 538:	f4 01       	movw	r30, r8
 53a:	ea 0d       	add	r30, r10
 53c:	f1 1d       	adc	r31, r1
 53e:	80 81       	ld	r24, Z
 540:	b7 01       	movw	r22, r14
 542:	90 e0       	ldi	r25, 0x00	; 0
 544:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <fputc>
 548:	a1 10       	cpse	r10, r1
 54a:	f5 cf       	rjmp	.-22     	; 0x536 <__LOCK_REGION_LENGTH__+0x136>
 54c:	33 20       	and	r3, r3
 54e:	09 f4       	brne	.+2      	; 0x552 <__LOCK_REGION_LENGTH__+0x152>
 550:	51 ce       	rjmp	.-862    	; 0x1f4 <vfprintf+0x24>
 552:	b7 01       	movw	r22, r14
 554:	80 e2       	ldi	r24, 0x20	; 32
 556:	90 e0       	ldi	r25, 0x00	; 0
 558:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <fputc>
 55c:	3a 94       	dec	r3
 55e:	f6 cf       	rjmp	.-20     	; 0x54c <__LOCK_REGION_LENGTH__+0x14c>
 560:	f7 01       	movw	r30, r14
 562:	86 81       	ldd	r24, Z+6	; 0x06
 564:	97 81       	ldd	r25, Z+7	; 0x07
 566:	02 c0       	rjmp	.+4      	; 0x56c <__LOCK_REGION_LENGTH__+0x16c>
 568:	8f ef       	ldi	r24, 0xFF	; 255
 56a:	9f ef       	ldi	r25, 0xFF	; 255
 56c:	2c 96       	adiw	r28, 0x0c	; 12
 56e:	e2 e1       	ldi	r30, 0x12	; 18
 570:	0c 94 82 03 	jmp	0x704	; 0x704 <__epilogue_restores__>

00000574 <strnlen_P>:
 574:	fc 01       	movw	r30, r24
 576:	05 90       	lpm	r0, Z+
 578:	61 50       	subi	r22, 0x01	; 1
 57a:	70 40       	sbci	r23, 0x00	; 0
 57c:	01 10       	cpse	r0, r1
 57e:	d8 f7       	brcc	.-10     	; 0x576 <strnlen_P+0x2>
 580:	80 95       	com	r24
 582:	90 95       	com	r25
 584:	8e 0f       	add	r24, r30
 586:	9f 1f       	adc	r25, r31
 588:	08 95       	ret

0000058a <strnlen>:
 58a:	fc 01       	movw	r30, r24
 58c:	61 50       	subi	r22, 0x01	; 1
 58e:	70 40       	sbci	r23, 0x00	; 0
 590:	01 90       	ld	r0, Z+
 592:	01 10       	cpse	r0, r1
 594:	d8 f7       	brcc	.-10     	; 0x58c <strnlen+0x2>
 596:	80 95       	com	r24
 598:	90 95       	com	r25
 59a:	8e 0f       	add	r24, r30
 59c:	9f 1f       	adc	r25, r31
 59e:	08 95       	ret

000005a0 <fputc>:
 5a0:	0f 93       	push	r16
 5a2:	1f 93       	push	r17
 5a4:	cf 93       	push	r28
 5a6:	df 93       	push	r29
 5a8:	fb 01       	movw	r30, r22
 5aa:	23 81       	ldd	r18, Z+3	; 0x03
 5ac:	21 fd       	sbrc	r18, 1
 5ae:	03 c0       	rjmp	.+6      	; 0x5b6 <fputc+0x16>
 5b0:	8f ef       	ldi	r24, 0xFF	; 255
 5b2:	9f ef       	ldi	r25, 0xFF	; 255
 5b4:	28 c0       	rjmp	.+80     	; 0x606 <fputc+0x66>
 5b6:	22 ff       	sbrs	r18, 2
 5b8:	16 c0       	rjmp	.+44     	; 0x5e6 <fputc+0x46>
 5ba:	46 81       	ldd	r20, Z+6	; 0x06
 5bc:	57 81       	ldd	r21, Z+7	; 0x07
 5be:	24 81       	ldd	r18, Z+4	; 0x04
 5c0:	35 81       	ldd	r19, Z+5	; 0x05
 5c2:	42 17       	cp	r20, r18
 5c4:	53 07       	cpc	r21, r19
 5c6:	44 f4       	brge	.+16     	; 0x5d8 <fputc+0x38>
 5c8:	a0 81       	ld	r26, Z
 5ca:	b1 81       	ldd	r27, Z+1	; 0x01
 5cc:	9d 01       	movw	r18, r26
 5ce:	2f 5f       	subi	r18, 0xFF	; 255
 5d0:	3f 4f       	sbci	r19, 0xFF	; 255
 5d2:	31 83       	std	Z+1, r19	; 0x01
 5d4:	20 83       	st	Z, r18
 5d6:	8c 93       	st	X, r24
 5d8:	26 81       	ldd	r18, Z+6	; 0x06
 5da:	37 81       	ldd	r19, Z+7	; 0x07
 5dc:	2f 5f       	subi	r18, 0xFF	; 255
 5de:	3f 4f       	sbci	r19, 0xFF	; 255
 5e0:	37 83       	std	Z+7, r19	; 0x07
 5e2:	26 83       	std	Z+6, r18	; 0x06
 5e4:	10 c0       	rjmp	.+32     	; 0x606 <fputc+0x66>
 5e6:	eb 01       	movw	r28, r22
 5e8:	09 2f       	mov	r16, r25
 5ea:	18 2f       	mov	r17, r24
 5ec:	00 84       	ldd	r0, Z+8	; 0x08
 5ee:	f1 85       	ldd	r31, Z+9	; 0x09
 5f0:	e0 2d       	mov	r30, r0
 5f2:	09 95       	icall
 5f4:	89 2b       	or	r24, r25
 5f6:	e1 f6       	brne	.-72     	; 0x5b0 <fputc+0x10>
 5f8:	8e 81       	ldd	r24, Y+6	; 0x06
 5fa:	9f 81       	ldd	r25, Y+7	; 0x07
 5fc:	01 96       	adiw	r24, 0x01	; 1
 5fe:	9f 83       	std	Y+7, r25	; 0x07
 600:	8e 83       	std	Y+6, r24	; 0x06
 602:	81 2f       	mov	r24, r17
 604:	90 2f       	mov	r25, r16
 606:	df 91       	pop	r29
 608:	cf 91       	pop	r28
 60a:	1f 91       	pop	r17
 60c:	0f 91       	pop	r16
 60e:	08 95       	ret

00000610 <__ultoa_invert>:
 610:	fa 01       	movw	r30, r20
 612:	aa 27       	eor	r26, r26
 614:	28 30       	cpi	r18, 0x08	; 8
 616:	51 f1       	breq	.+84     	; 0x66c <__ultoa_invert+0x5c>
 618:	20 31       	cpi	r18, 0x10	; 16
 61a:	81 f1       	breq	.+96     	; 0x67c <__ultoa_invert+0x6c>
 61c:	e8 94       	clt
 61e:	6f 93       	push	r22
 620:	6e 7f       	andi	r22, 0xFE	; 254
 622:	6e 5f       	subi	r22, 0xFE	; 254
 624:	7f 4f       	sbci	r23, 0xFF	; 255
 626:	8f 4f       	sbci	r24, 0xFF	; 255
 628:	9f 4f       	sbci	r25, 0xFF	; 255
 62a:	af 4f       	sbci	r26, 0xFF	; 255
 62c:	b1 e0       	ldi	r27, 0x01	; 1
 62e:	3e d0       	rcall	.+124    	; 0x6ac <__ultoa_invert+0x9c>
 630:	b4 e0       	ldi	r27, 0x04	; 4
 632:	3c d0       	rcall	.+120    	; 0x6ac <__ultoa_invert+0x9c>
 634:	67 0f       	add	r22, r23
 636:	78 1f       	adc	r23, r24
 638:	89 1f       	adc	r24, r25
 63a:	9a 1f       	adc	r25, r26
 63c:	a1 1d       	adc	r26, r1
 63e:	68 0f       	add	r22, r24
 640:	79 1f       	adc	r23, r25
 642:	8a 1f       	adc	r24, r26
 644:	91 1d       	adc	r25, r1
 646:	a1 1d       	adc	r26, r1
 648:	6a 0f       	add	r22, r26
 64a:	71 1d       	adc	r23, r1
 64c:	81 1d       	adc	r24, r1
 64e:	91 1d       	adc	r25, r1
 650:	a1 1d       	adc	r26, r1
 652:	20 d0       	rcall	.+64     	; 0x694 <__ultoa_invert+0x84>
 654:	09 f4       	brne	.+2      	; 0x658 <__ultoa_invert+0x48>
 656:	68 94       	set
 658:	3f 91       	pop	r19
 65a:	2a e0       	ldi	r18, 0x0A	; 10
 65c:	26 9f       	mul	r18, r22
 65e:	11 24       	eor	r1, r1
 660:	30 19       	sub	r19, r0
 662:	30 5d       	subi	r19, 0xD0	; 208
 664:	31 93       	st	Z+, r19
 666:	de f6       	brtc	.-74     	; 0x61e <__ultoa_invert+0xe>
 668:	cf 01       	movw	r24, r30
 66a:	08 95       	ret
 66c:	46 2f       	mov	r20, r22
 66e:	47 70       	andi	r20, 0x07	; 7
 670:	40 5d       	subi	r20, 0xD0	; 208
 672:	41 93       	st	Z+, r20
 674:	b3 e0       	ldi	r27, 0x03	; 3
 676:	0f d0       	rcall	.+30     	; 0x696 <__ultoa_invert+0x86>
 678:	c9 f7       	brne	.-14     	; 0x66c <__ultoa_invert+0x5c>
 67a:	f6 cf       	rjmp	.-20     	; 0x668 <__ultoa_invert+0x58>
 67c:	46 2f       	mov	r20, r22
 67e:	4f 70       	andi	r20, 0x0F	; 15
 680:	40 5d       	subi	r20, 0xD0	; 208
 682:	4a 33       	cpi	r20, 0x3A	; 58
 684:	18 f0       	brcs	.+6      	; 0x68c <__ultoa_invert+0x7c>
 686:	49 5d       	subi	r20, 0xD9	; 217
 688:	31 fd       	sbrc	r19, 1
 68a:	40 52       	subi	r20, 0x20	; 32
 68c:	41 93       	st	Z+, r20
 68e:	02 d0       	rcall	.+4      	; 0x694 <__ultoa_invert+0x84>
 690:	a9 f7       	brne	.-22     	; 0x67c <__ultoa_invert+0x6c>
 692:	ea cf       	rjmp	.-44     	; 0x668 <__ultoa_invert+0x58>
 694:	b4 e0       	ldi	r27, 0x04	; 4
 696:	a6 95       	lsr	r26
 698:	97 95       	ror	r25
 69a:	87 95       	ror	r24
 69c:	77 95       	ror	r23
 69e:	67 95       	ror	r22
 6a0:	ba 95       	dec	r27
 6a2:	c9 f7       	brne	.-14     	; 0x696 <__ultoa_invert+0x86>
 6a4:	00 97       	sbiw	r24, 0x00	; 0
 6a6:	61 05       	cpc	r22, r1
 6a8:	71 05       	cpc	r23, r1
 6aa:	08 95       	ret
 6ac:	9b 01       	movw	r18, r22
 6ae:	ac 01       	movw	r20, r24
 6b0:	0a 2e       	mov	r0, r26
 6b2:	06 94       	lsr	r0
 6b4:	57 95       	ror	r21
 6b6:	47 95       	ror	r20
 6b8:	37 95       	ror	r19
 6ba:	27 95       	ror	r18
 6bc:	ba 95       	dec	r27
 6be:	c9 f7       	brne	.-14     	; 0x6b2 <__ultoa_invert+0xa2>
 6c0:	62 0f       	add	r22, r18
 6c2:	73 1f       	adc	r23, r19
 6c4:	84 1f       	adc	r24, r20
 6c6:	95 1f       	adc	r25, r21
 6c8:	a0 1d       	adc	r26, r0
 6ca:	08 95       	ret

000006cc <__prologue_saves__>:
 6cc:	2f 92       	push	r2
 6ce:	3f 92       	push	r3
 6d0:	4f 92       	push	r4
 6d2:	5f 92       	push	r5
 6d4:	6f 92       	push	r6
 6d6:	7f 92       	push	r7
 6d8:	8f 92       	push	r8
 6da:	9f 92       	push	r9
 6dc:	af 92       	push	r10
 6de:	bf 92       	push	r11
 6e0:	cf 92       	push	r12
 6e2:	df 92       	push	r13
 6e4:	ef 92       	push	r14
 6e6:	ff 92       	push	r15
 6e8:	0f 93       	push	r16
 6ea:	1f 93       	push	r17
 6ec:	cf 93       	push	r28
 6ee:	df 93       	push	r29
 6f0:	cd b7       	in	r28, 0x3d	; 61
 6f2:	de b7       	in	r29, 0x3e	; 62
 6f4:	ca 1b       	sub	r28, r26
 6f6:	db 0b       	sbc	r29, r27
 6f8:	0f b6       	in	r0, 0x3f	; 63
 6fa:	f8 94       	cli
 6fc:	de bf       	out	0x3e, r29	; 62
 6fe:	0f be       	out	0x3f, r0	; 63
 700:	cd bf       	out	0x3d, r28	; 61
 702:	09 94       	ijmp

00000704 <__epilogue_restores__>:
 704:	2a 88       	ldd	r2, Y+18	; 0x12
 706:	39 88       	ldd	r3, Y+17	; 0x11
 708:	48 88       	ldd	r4, Y+16	; 0x10
 70a:	5f 84       	ldd	r5, Y+15	; 0x0f
 70c:	6e 84       	ldd	r6, Y+14	; 0x0e
 70e:	7d 84       	ldd	r7, Y+13	; 0x0d
 710:	8c 84       	ldd	r8, Y+12	; 0x0c
 712:	9b 84       	ldd	r9, Y+11	; 0x0b
 714:	aa 84       	ldd	r10, Y+10	; 0x0a
 716:	b9 84       	ldd	r11, Y+9	; 0x09
 718:	c8 84       	ldd	r12, Y+8	; 0x08
 71a:	df 80       	ldd	r13, Y+7	; 0x07
 71c:	ee 80       	ldd	r14, Y+6	; 0x06
 71e:	fd 80       	ldd	r15, Y+5	; 0x05
 720:	0c 81       	ldd	r16, Y+4	; 0x04
 722:	1b 81       	ldd	r17, Y+3	; 0x03
 724:	aa 81       	ldd	r26, Y+2	; 0x02
 726:	b9 81       	ldd	r27, Y+1	; 0x01
 728:	ce 0f       	add	r28, r30
 72a:	d1 1d       	adc	r29, r1
 72c:	0f b6       	in	r0, 0x3f	; 63
 72e:	f8 94       	cli
 730:	de bf       	out	0x3e, r29	; 62
 732:	0f be       	out	0x3f, r0	; 63
 734:	cd bf       	out	0x3d, r28	; 61
 736:	ed 01       	movw	r28, r26
 738:	08 95       	ret

0000073a <_exit>:
 73a:	f8 94       	cli

0000073c <__stop_program>:
 73c:	ff cf       	rjmp	.-2      	; 0x73c <__stop_program>
