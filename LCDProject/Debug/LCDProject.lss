
LCDProject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000014  00800100  000007a8  0000083c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000007a8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800114  00800114  00000850  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000850  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000008ac  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000070  00000000  00000000  000008ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000a5c  00000000  00000000  0000095c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000802  00000000  00000000  000013b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000477  00000000  00000000  00001bba  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000e4  00000000  00000000  00002034  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003e8  00000000  00000000  00002118  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000018d  00000000  00000000  00002500  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000268d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e8 ea       	ldi	r30, 0xA8	; 168
  7c:	f7 e0       	ldi	r31, 0x07	; 7
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a4 31       	cpi	r26, 0x14	; 20
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a4 e1       	ldi	r26, 0x14	; 20
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	aa 31       	cpi	r26, 0x1A	; 26
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <main>
  9e:	0c 94 d2 03 	jmp	0x7a4	; 0x7a4 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <powerON>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  a6:	2f ef       	ldi	r18, 0xFF	; 255
  a8:	80 e7       	ldi	r24, 0x70	; 112
  aa:	92 e0       	ldi	r25, 0x02	; 2
  ac:	21 50       	subi	r18, 0x01	; 1
  ae:	80 40       	sbci	r24, 0x00	; 0
  b0:	90 40       	sbci	r25, 0x00	; 0
  b2:	e1 f7       	brne	.-8      	; 0xac <powerON+0x6>
  b4:	00 c0       	rjmp	.+0      	; 0xb6 <powerON+0x10>
  b6:	00 00       	nop
 }

 // debug
 void powerON(){
	 _delay_ms(100);
	 PINC |= (1<<LedGreen);
  b8:	33 9a       	sbi	0x06, 3	; 6
  ba:	08 95       	ret

000000bc <enable>:

 //Enable
 void enable(){
	 // switch it on and off
	 //to receive a command
	 LCDControl |= (1 << LCDEnable);
  bc:	42 9a       	sbi	0x08, 2	; 8
	 asm volatile("nop");
  be:	00 00       	nop
	 asm volatile("nop");
  c0:	00 00       	nop
	 LCDControl &= ~(1 << LCDEnable);
  c2:	42 98       	cbi	0x08, 2	; 8
  c4:	08 95       	ret

000000c6 <checkStatus>:
 _delay_ms(50);
 sendString("pier shaw");
 }

 void checkStatus(){
	 DataDirMain = 0x00;
  c6:	1a b8       	out	0x0a, r1	; 10
	 LCDControl |= 1 << LCDReadWrite;
  c8:	41 9a       	sbi	0x08, 1	; 8
	 LCDControl &= ~(1 << LCDRegistorSelect);
  ca:	40 98       	cbi	0x08, 0	; 8
	 while (LCDMain >= BUZZY)
  cc:	5f 9b       	sbis	0x0b, 7	; 11
  ce:	04 c0       	rjmp	.+8      	; 0xd8 <checkStatus+0x12>
	 {
		 enable();
  d0:	0e 94 5e 00 	call	0xbc	; 0xbc <enable>

 void checkStatus(){
	 DataDirMain = 0x00;
	 LCDControl |= 1 << LCDReadWrite;
	 LCDControl &= ~(1 << LCDRegistorSelect);
	 while (LCDMain >= BUZZY)
  d4:	5f 99       	sbic	0x0b, 7	; 11
  d6:	fc cf       	rjmp	.-8      	; 0xd0 <checkStatus+0xa>
	 {
		 enable();
	 }
	 DataDirMain = 0xFF;
  d8:	8f ef       	ldi	r24, 0xFF	; 255
  da:	8a b9       	out	0x0a, r24	; 10
  dc:	08 95       	ret

000000de <sendCommand>:
	 asm volatile("nop");
	 LCDControl &= ~(1 << LCDEnable);
	 //to do a command
 }
 //output
 void sendCommand(unsigned char cmd){
  de:	cf 93       	push	r28
  e0:	c8 2f       	mov	r28, r24
	 checkStatus();
  e2:	0e 94 63 00 	call	0xc6	; 0xc6 <checkStatus>
	 LCDMain = cmd;
  e6:	cb b9       	out	0x0b, r28	; 11
	 LCDControl &= ~((1 << LCDReadWrite) | (1 << LCDRegistorSelect));
  e8:	88 b1       	in	r24, 0x08	; 8
  ea:	8c 7f       	andi	r24, 0xFC	; 252
  ec:	88 b9       	out	0x08, r24	; 8
	 enable();
  ee:	0e 94 5e 00 	call	0xbc	; 0xbc <enable>
	 LCDMain = 0x00;
  f2:	1b b8       	out	0x0b, r1	; 11
 }
  f4:	cf 91       	pop	r28
  f6:	08 95       	ret

000000f8 <sendCharacter>:
 //output
 void sendCharacter(unsigned char c){
  f8:	cf 93       	push	r28
  fa:	c8 2f       	mov	r28, r24
	 checkStatus();
  fc:	0e 94 63 00 	call	0xc6	; 0xc6 <checkStatus>
	 LCDMain = c;
 100:	cb b9       	out	0x0b, r28	; 11
	 LCDControl &= ~(1 << LCDReadWrite);
 102:	41 98       	cbi	0x08, 1	; 8
	 LCDControl |= 1 << LCDRegistorSelect;
 104:	40 9a       	sbi	0x08, 0	; 8
	 enable();
 106:	0e 94 5e 00 	call	0xbc	; 0xbc <enable>
	 LCDMain = 0x00;
 10a:	1b b8       	out	0x0b, r1	; 11
 }
 10c:	cf 91       	pop	r28
 10e:	08 95       	ret

00000110 <sendString>:
 //output
 void sendString(char *stringOfChars){
 110:	0f 93       	push	r16
 112:	1f 93       	push	r17
 114:	cf 93       	push	r28
 116:	df 93       	push	r29
 118:	ec 01       	movw	r28, r24
	 checkStatus();
 11a:	0e 94 63 00 	call	0xc6	; 0xc6 <checkStatus>
	 while(*stringOfChars > 0){
 11e:	88 81       	ld	r24, Y
 120:	88 23       	and	r24, r24
 122:	71 f0       	breq	.+28     	; 0x140 <sendString+0x30>
		 printf_P("");
 124:	02 e1       	ldi	r16, 0x12	; 18
 126:	11 e0       	ldi	r17, 0x01	; 1
 128:	1f 93       	push	r17
 12a:	0f 93       	push	r16
 12c:	0e 94 f7 00 	call	0x1ee	; 0x1ee <printf_P>
		 sendCharacter(*stringOfChars++);
 130:	89 91       	ld	r24, Y+
 132:	0e 94 7c 00 	call	0xf8	; 0xf8 <sendCharacter>
	 LCDMain = 0x00;
 }
 //output
 void sendString(char *stringOfChars){
	 checkStatus();
	 while(*stringOfChars > 0){
 136:	0f 90       	pop	r0
 138:	0f 90       	pop	r0
 13a:	88 81       	ld	r24, Y
 13c:	81 11       	cpse	r24, r1
 13e:	f4 cf       	rjmp	.-24     	; 0x128 <sendString+0x18>
		 printf_P("");
		 sendCharacter(*stringOfChars++);
	 }
 140:	df 91       	pop	r29
 142:	cf 91       	pop	r28
 144:	1f 91       	pop	r17
 146:	0f 91       	pop	r16
 148:	08 95       	ret

0000014a <LCD>:
#include "LCD.h"


void LCD(){
 // sets all DDRC data direction ports to output bit[1]
 DataDirControl |= 1 << LCDEnable | 1 << LCDReadWrite | 1 << LCDRegistorSelect | 1 << LedGreen;
 14a:	87 b1       	in	r24, 0x07	; 7
 14c:	8f 60       	ori	r24, 0x0F	; 15
 14e:	87 b9       	out	0x07, r24	; 7
 150:	8f e2       	ldi	r24, 0x2F	; 47
 152:	95 e7       	ldi	r25, 0x75	; 117
 154:	01 97       	sbiw	r24, 0x01	; 1
 156:	f1 f7       	brne	.-4      	; 0x154 <LCD+0xa>
 158:	00 c0       	rjmp	.+0      	; 0x15a <LCD+0x10>
 15a:	00 00       	nop
 _delay_ms(15);
 /* Replace with your application code */
 sendCommand(CLEARSCREEN);
 15c:	81 e0       	ldi	r24, 0x01	; 1
 15e:	0e 94 6f 00 	call	0xde	; 0xde <sendCommand>
 162:	8f e9       	ldi	r24, 0x9F	; 159
 164:	9f e0       	ldi	r25, 0x0F	; 15
 166:	01 97       	sbiw	r24, 0x01	; 1
 168:	f1 f7       	brne	.-4      	; 0x166 <LCD+0x1c>
 16a:	00 c0       	rjmp	.+0      	; 0x16c <LCD+0x22>
 16c:	00 00       	nop
 _delay_ms(2);
 sendCommand(BITMODE8BIT);
 16e:	88 e3       	ldi	r24, 0x38	; 56
 170:	0e 94 6f 00 	call	0xde	; 0xde <sendCommand>
 174:	9f e7       	ldi	r25, 0x7F	; 127
 176:	28 e3       	ldi	r18, 0x38	; 56
 178:	81 e0       	ldi	r24, 0x01	; 1
 17a:	91 50       	subi	r25, 0x01	; 1
 17c:	20 40       	sbci	r18, 0x00	; 0
 17e:	80 40       	sbci	r24, 0x00	; 0
 180:	e1 f7       	brne	.-8      	; 0x17a <LCD+0x30>
 182:	00 c0       	rjmp	.+0      	; 0x184 <LCD+0x3a>
 184:	00 00       	nop
 _delay_ms(50);
 sendCommand(LCDONBlink);
 186:	8f e0       	ldi	r24, 0x0F	; 15
 188:	0e 94 6f 00 	call	0xde	; 0xde <sendCommand>
 18c:	9f e7       	ldi	r25, 0x7F	; 127
 18e:	28 e3       	ldi	r18, 0x38	; 56
 190:	81 e0       	ldi	r24, 0x01	; 1
 192:	91 50       	subi	r25, 0x01	; 1
 194:	20 40       	sbci	r18, 0x00	; 0
 196:	80 40       	sbci	r24, 0x00	; 0
 198:	e1 f7       	brne	.-8      	; 0x192 <LCD+0x48>
 19a:	00 c0       	rjmp	.+0      	; 0x19c <LCD+0x52>
 19c:	00 00       	nop
 _delay_ms(50);
 sendString("pier shaw");
 19e:	80 e0       	ldi	r24, 0x00	; 0
 1a0:	91 e0       	ldi	r25, 0x01	; 1
 1a2:	0e 94 88 00 	call	0x110	; 0x110 <sendString>
 1a6:	08 95       	ret

000001a8 <main>:
/************************************************************************/
/*main*/
/************************************************************************/
int main(void)
{
	printf("Running!");
 1a8:	8a e0       	ldi	r24, 0x0A	; 10
 1aa:	91 e0       	ldi	r25, 0x01	; 1
 1ac:	9f 93       	push	r25
 1ae:	8f 93       	push	r24
 1b0:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <printf>
	LCD();
 1b4:	0e 94 a5 00 	call	0x14a	; 0x14a <LCD>
 1b8:	0f 90       	pop	r0
 1ba:	0f 90       	pop	r0

    while (1) 
    {
		powerON();
 1bc:	0e 94 53 00 	call	0xa6	; 0xa6 <powerON>
    }
 1c0:	fd cf       	rjmp	.-6      	; 0x1bc <main+0x14>

000001c2 <printf>:
 1c2:	a0 e0       	ldi	r26, 0x00	; 0
 1c4:	b0 e0       	ldi	r27, 0x00	; 0
 1c6:	e7 ee       	ldi	r30, 0xE7	; 231
 1c8:	f0 e0       	ldi	r31, 0x00	; 0
 1ca:	0c 94 ab 03 	jmp	0x756	; 0x756 <__prologue_saves__+0x20>
 1ce:	ae 01       	movw	r20, r28
 1d0:	4b 5f       	subi	r20, 0xFB	; 251
 1d2:	5f 4f       	sbci	r21, 0xFF	; 255
 1d4:	fa 01       	movw	r30, r20
 1d6:	61 91       	ld	r22, Z+
 1d8:	71 91       	ld	r23, Z+
 1da:	af 01       	movw	r20, r30
 1dc:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <__data_end+0x2>
 1e0:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <__data_end+0x3>
 1e4:	0e 94 1d 01 	call	0x23a	; 0x23a <vfprintf>
 1e8:	e2 e0       	ldi	r30, 0x02	; 2
 1ea:	0c 94 c7 03 	jmp	0x78e	; 0x78e <__epilogue_restores__+0x20>

000001ee <printf_P>:
 1ee:	a0 e0       	ldi	r26, 0x00	; 0
 1f0:	b0 e0       	ldi	r27, 0x00	; 0
 1f2:	ed ef       	ldi	r30, 0xFD	; 253
 1f4:	f0 e0       	ldi	r31, 0x00	; 0
 1f6:	0c 94 a9 03 	jmp	0x752	; 0x752 <__prologue_saves__+0x1c>
 1fa:	ae 01       	movw	r20, r28
 1fc:	49 5f       	subi	r20, 0xF9	; 249
 1fe:	5f 4f       	sbci	r21, 0xFF	; 255
 200:	da 01       	movw	r26, r20
 202:	6d 91       	ld	r22, X+
 204:	7d 91       	ld	r23, X+
 206:	ad 01       	movw	r20, r26
 208:	04 e1       	ldi	r16, 0x14	; 20
 20a:	11 e0       	ldi	r17, 0x01	; 1
 20c:	f8 01       	movw	r30, r16
 20e:	82 81       	ldd	r24, Z+2	; 0x02
 210:	93 81       	ldd	r25, Z+3	; 0x03
 212:	dc 01       	movw	r26, r24
 214:	13 96       	adiw	r26, 0x03	; 3
 216:	2c 91       	ld	r18, X
 218:	13 97       	sbiw	r26, 0x03	; 3
 21a:	28 60       	ori	r18, 0x08	; 8
 21c:	13 96       	adiw	r26, 0x03	; 3
 21e:	2c 93       	st	X, r18
 220:	0e 94 1d 01 	call	0x23a	; 0x23a <vfprintf>
 224:	d8 01       	movw	r26, r16
 226:	12 96       	adiw	r26, 0x02	; 2
 228:	ed 91       	ld	r30, X+
 22a:	fc 91       	ld	r31, X
 22c:	13 97       	sbiw	r26, 0x03	; 3
 22e:	23 81       	ldd	r18, Z+3	; 0x03
 230:	27 7f       	andi	r18, 0xF7	; 247
 232:	23 83       	std	Z+3, r18	; 0x03
 234:	e4 e0       	ldi	r30, 0x04	; 4
 236:	0c 94 c5 03 	jmp	0x78a	; 0x78a <__epilogue_restores__+0x1c>

0000023a <vfprintf>:
 23a:	ac e0       	ldi	r26, 0x0C	; 12
 23c:	b0 e0       	ldi	r27, 0x00	; 0
 23e:	e3 e2       	ldi	r30, 0x23	; 35
 240:	f1 e0       	ldi	r31, 0x01	; 1
 242:	0c 94 9b 03 	jmp	0x736	; 0x736 <__prologue_saves__>
 246:	7c 01       	movw	r14, r24
 248:	6b 01       	movw	r12, r22
 24a:	8a 01       	movw	r16, r20
 24c:	fc 01       	movw	r30, r24
 24e:	17 82       	std	Z+7, r1	; 0x07
 250:	16 82       	std	Z+6, r1	; 0x06
 252:	83 81       	ldd	r24, Z+3	; 0x03
 254:	81 ff       	sbrs	r24, 1
 256:	bd c1       	rjmp	.+890    	; 0x5d2 <__LOCK_REGION_LENGTH__+0x1d2>
 258:	ce 01       	movw	r24, r28
 25a:	01 96       	adiw	r24, 0x01	; 1
 25c:	4c 01       	movw	r8, r24
 25e:	f7 01       	movw	r30, r14
 260:	93 81       	ldd	r25, Z+3	; 0x03
 262:	f6 01       	movw	r30, r12
 264:	93 fd       	sbrc	r25, 3
 266:	85 91       	lpm	r24, Z+
 268:	93 ff       	sbrs	r25, 3
 26a:	81 91       	ld	r24, Z+
 26c:	6f 01       	movw	r12, r30
 26e:	88 23       	and	r24, r24
 270:	09 f4       	brne	.+2      	; 0x274 <vfprintf+0x3a>
 272:	ab c1       	rjmp	.+854    	; 0x5ca <__LOCK_REGION_LENGTH__+0x1ca>
 274:	85 32       	cpi	r24, 0x25	; 37
 276:	39 f4       	brne	.+14     	; 0x286 <vfprintf+0x4c>
 278:	93 fd       	sbrc	r25, 3
 27a:	85 91       	lpm	r24, Z+
 27c:	93 ff       	sbrs	r25, 3
 27e:	81 91       	ld	r24, Z+
 280:	6f 01       	movw	r12, r30
 282:	85 32       	cpi	r24, 0x25	; 37
 284:	29 f4       	brne	.+10     	; 0x290 <vfprintf+0x56>
 286:	b7 01       	movw	r22, r14
 288:	90 e0       	ldi	r25, 0x00	; 0
 28a:	0e 94 05 03 	call	0x60a	; 0x60a <fputc>
 28e:	e7 cf       	rjmp	.-50     	; 0x25e <vfprintf+0x24>
 290:	51 2c       	mov	r5, r1
 292:	31 2c       	mov	r3, r1
 294:	20 e0       	ldi	r18, 0x00	; 0
 296:	20 32       	cpi	r18, 0x20	; 32
 298:	a0 f4       	brcc	.+40     	; 0x2c2 <vfprintf+0x88>
 29a:	8b 32       	cpi	r24, 0x2B	; 43
 29c:	69 f0       	breq	.+26     	; 0x2b8 <vfprintf+0x7e>
 29e:	30 f4       	brcc	.+12     	; 0x2ac <vfprintf+0x72>
 2a0:	80 32       	cpi	r24, 0x20	; 32
 2a2:	59 f0       	breq	.+22     	; 0x2ba <vfprintf+0x80>
 2a4:	83 32       	cpi	r24, 0x23	; 35
 2a6:	69 f4       	brne	.+26     	; 0x2c2 <vfprintf+0x88>
 2a8:	20 61       	ori	r18, 0x10	; 16
 2aa:	2c c0       	rjmp	.+88     	; 0x304 <vfprintf+0xca>
 2ac:	8d 32       	cpi	r24, 0x2D	; 45
 2ae:	39 f0       	breq	.+14     	; 0x2be <vfprintf+0x84>
 2b0:	80 33       	cpi	r24, 0x30	; 48
 2b2:	39 f4       	brne	.+14     	; 0x2c2 <vfprintf+0x88>
 2b4:	21 60       	ori	r18, 0x01	; 1
 2b6:	26 c0       	rjmp	.+76     	; 0x304 <vfprintf+0xca>
 2b8:	22 60       	ori	r18, 0x02	; 2
 2ba:	24 60       	ori	r18, 0x04	; 4
 2bc:	23 c0       	rjmp	.+70     	; 0x304 <vfprintf+0xca>
 2be:	28 60       	ori	r18, 0x08	; 8
 2c0:	21 c0       	rjmp	.+66     	; 0x304 <vfprintf+0xca>
 2c2:	27 fd       	sbrc	r18, 7
 2c4:	27 c0       	rjmp	.+78     	; 0x314 <vfprintf+0xda>
 2c6:	30 ed       	ldi	r19, 0xD0	; 208
 2c8:	38 0f       	add	r19, r24
 2ca:	3a 30       	cpi	r19, 0x0A	; 10
 2cc:	78 f4       	brcc	.+30     	; 0x2ec <vfprintf+0xb2>
 2ce:	26 ff       	sbrs	r18, 6
 2d0:	06 c0       	rjmp	.+12     	; 0x2de <vfprintf+0xa4>
 2d2:	fa e0       	ldi	r31, 0x0A	; 10
 2d4:	5f 9e       	mul	r5, r31
 2d6:	30 0d       	add	r19, r0
 2d8:	11 24       	eor	r1, r1
 2da:	53 2e       	mov	r5, r19
 2dc:	13 c0       	rjmp	.+38     	; 0x304 <vfprintf+0xca>
 2de:	8a e0       	ldi	r24, 0x0A	; 10
 2e0:	38 9e       	mul	r3, r24
 2e2:	30 0d       	add	r19, r0
 2e4:	11 24       	eor	r1, r1
 2e6:	33 2e       	mov	r3, r19
 2e8:	20 62       	ori	r18, 0x20	; 32
 2ea:	0c c0       	rjmp	.+24     	; 0x304 <vfprintf+0xca>
 2ec:	8e 32       	cpi	r24, 0x2E	; 46
 2ee:	21 f4       	brne	.+8      	; 0x2f8 <vfprintf+0xbe>
 2f0:	26 fd       	sbrc	r18, 6
 2f2:	6b c1       	rjmp	.+726    	; 0x5ca <__LOCK_REGION_LENGTH__+0x1ca>
 2f4:	20 64       	ori	r18, 0x40	; 64
 2f6:	06 c0       	rjmp	.+12     	; 0x304 <vfprintf+0xca>
 2f8:	8c 36       	cpi	r24, 0x6C	; 108
 2fa:	11 f4       	brne	.+4      	; 0x300 <vfprintf+0xc6>
 2fc:	20 68       	ori	r18, 0x80	; 128
 2fe:	02 c0       	rjmp	.+4      	; 0x304 <vfprintf+0xca>
 300:	88 36       	cpi	r24, 0x68	; 104
 302:	41 f4       	brne	.+16     	; 0x314 <vfprintf+0xda>
 304:	f6 01       	movw	r30, r12
 306:	93 fd       	sbrc	r25, 3
 308:	85 91       	lpm	r24, Z+
 30a:	93 ff       	sbrs	r25, 3
 30c:	81 91       	ld	r24, Z+
 30e:	6f 01       	movw	r12, r30
 310:	81 11       	cpse	r24, r1
 312:	c1 cf       	rjmp	.-126    	; 0x296 <vfprintf+0x5c>
 314:	98 2f       	mov	r25, r24
 316:	9f 7d       	andi	r25, 0xDF	; 223
 318:	95 54       	subi	r25, 0x45	; 69
 31a:	93 30       	cpi	r25, 0x03	; 3
 31c:	28 f4       	brcc	.+10     	; 0x328 <vfprintf+0xee>
 31e:	0c 5f       	subi	r16, 0xFC	; 252
 320:	1f 4f       	sbci	r17, 0xFF	; 255
 322:	ff e3       	ldi	r31, 0x3F	; 63
 324:	f9 83       	std	Y+1, r31	; 0x01
 326:	0d c0       	rjmp	.+26     	; 0x342 <vfprintf+0x108>
 328:	83 36       	cpi	r24, 0x63	; 99
 32a:	31 f0       	breq	.+12     	; 0x338 <vfprintf+0xfe>
 32c:	83 37       	cpi	r24, 0x73	; 115
 32e:	71 f0       	breq	.+28     	; 0x34c <vfprintf+0x112>
 330:	83 35       	cpi	r24, 0x53	; 83
 332:	09 f0       	breq	.+2      	; 0x336 <vfprintf+0xfc>
 334:	5b c0       	rjmp	.+182    	; 0x3ec <vfprintf+0x1b2>
 336:	22 c0       	rjmp	.+68     	; 0x37c <vfprintf+0x142>
 338:	f8 01       	movw	r30, r16
 33a:	80 81       	ld	r24, Z
 33c:	89 83       	std	Y+1, r24	; 0x01
 33e:	0e 5f       	subi	r16, 0xFE	; 254
 340:	1f 4f       	sbci	r17, 0xFF	; 255
 342:	44 24       	eor	r4, r4
 344:	43 94       	inc	r4
 346:	51 2c       	mov	r5, r1
 348:	54 01       	movw	r10, r8
 34a:	15 c0       	rjmp	.+42     	; 0x376 <vfprintf+0x13c>
 34c:	38 01       	movw	r6, r16
 34e:	f2 e0       	ldi	r31, 0x02	; 2
 350:	6f 0e       	add	r6, r31
 352:	71 1c       	adc	r7, r1
 354:	f8 01       	movw	r30, r16
 356:	a0 80       	ld	r10, Z
 358:	b1 80       	ldd	r11, Z+1	; 0x01
 35a:	26 ff       	sbrs	r18, 6
 35c:	03 c0       	rjmp	.+6      	; 0x364 <vfprintf+0x12a>
 35e:	65 2d       	mov	r22, r5
 360:	70 e0       	ldi	r23, 0x00	; 0
 362:	02 c0       	rjmp	.+4      	; 0x368 <vfprintf+0x12e>
 364:	6f ef       	ldi	r22, 0xFF	; 255
 366:	7f ef       	ldi	r23, 0xFF	; 255
 368:	c5 01       	movw	r24, r10
 36a:	2c 87       	std	Y+12, r18	; 0x0c
 36c:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <strnlen>
 370:	2c 01       	movw	r4, r24
 372:	83 01       	movw	r16, r6
 374:	2c 85       	ldd	r18, Y+12	; 0x0c
 376:	2f 77       	andi	r18, 0x7F	; 127
 378:	22 2e       	mov	r2, r18
 37a:	17 c0       	rjmp	.+46     	; 0x3aa <vfprintf+0x170>
 37c:	38 01       	movw	r6, r16
 37e:	f2 e0       	ldi	r31, 0x02	; 2
 380:	6f 0e       	add	r6, r31
 382:	71 1c       	adc	r7, r1
 384:	f8 01       	movw	r30, r16
 386:	a0 80       	ld	r10, Z
 388:	b1 80       	ldd	r11, Z+1	; 0x01
 38a:	26 ff       	sbrs	r18, 6
 38c:	03 c0       	rjmp	.+6      	; 0x394 <vfprintf+0x15a>
 38e:	65 2d       	mov	r22, r5
 390:	70 e0       	ldi	r23, 0x00	; 0
 392:	02 c0       	rjmp	.+4      	; 0x398 <vfprintf+0x15e>
 394:	6f ef       	ldi	r22, 0xFF	; 255
 396:	7f ef       	ldi	r23, 0xFF	; 255
 398:	c5 01       	movw	r24, r10
 39a:	2c 87       	std	Y+12, r18	; 0x0c
 39c:	0e 94 ef 02 	call	0x5de	; 0x5de <strnlen_P>
 3a0:	2c 01       	movw	r4, r24
 3a2:	2c 85       	ldd	r18, Y+12	; 0x0c
 3a4:	20 68       	ori	r18, 0x80	; 128
 3a6:	22 2e       	mov	r2, r18
 3a8:	83 01       	movw	r16, r6
 3aa:	23 fc       	sbrc	r2, 3
 3ac:	1b c0       	rjmp	.+54     	; 0x3e4 <vfprintf+0x1aa>
 3ae:	83 2d       	mov	r24, r3
 3b0:	90 e0       	ldi	r25, 0x00	; 0
 3b2:	48 16       	cp	r4, r24
 3b4:	59 06       	cpc	r5, r25
 3b6:	b0 f4       	brcc	.+44     	; 0x3e4 <vfprintf+0x1aa>
 3b8:	b7 01       	movw	r22, r14
 3ba:	80 e2       	ldi	r24, 0x20	; 32
 3bc:	90 e0       	ldi	r25, 0x00	; 0
 3be:	0e 94 05 03 	call	0x60a	; 0x60a <fputc>
 3c2:	3a 94       	dec	r3
 3c4:	f4 cf       	rjmp	.-24     	; 0x3ae <vfprintf+0x174>
 3c6:	f5 01       	movw	r30, r10
 3c8:	27 fc       	sbrc	r2, 7
 3ca:	85 91       	lpm	r24, Z+
 3cc:	27 fe       	sbrs	r2, 7
 3ce:	81 91       	ld	r24, Z+
 3d0:	5f 01       	movw	r10, r30
 3d2:	b7 01       	movw	r22, r14
 3d4:	90 e0       	ldi	r25, 0x00	; 0
 3d6:	0e 94 05 03 	call	0x60a	; 0x60a <fputc>
 3da:	31 10       	cpse	r3, r1
 3dc:	3a 94       	dec	r3
 3de:	f1 e0       	ldi	r31, 0x01	; 1
 3e0:	4f 1a       	sub	r4, r31
 3e2:	51 08       	sbc	r5, r1
 3e4:	41 14       	cp	r4, r1
 3e6:	51 04       	cpc	r5, r1
 3e8:	71 f7       	brne	.-36     	; 0x3c6 <vfprintf+0x18c>
 3ea:	e5 c0       	rjmp	.+458    	; 0x5b6 <__LOCK_REGION_LENGTH__+0x1b6>
 3ec:	84 36       	cpi	r24, 0x64	; 100
 3ee:	11 f0       	breq	.+4      	; 0x3f4 <vfprintf+0x1ba>
 3f0:	89 36       	cpi	r24, 0x69	; 105
 3f2:	39 f5       	brne	.+78     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 3f4:	f8 01       	movw	r30, r16
 3f6:	27 ff       	sbrs	r18, 7
 3f8:	07 c0       	rjmp	.+14     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 3fa:	60 81       	ld	r22, Z
 3fc:	71 81       	ldd	r23, Z+1	; 0x01
 3fe:	82 81       	ldd	r24, Z+2	; 0x02
 400:	93 81       	ldd	r25, Z+3	; 0x03
 402:	0c 5f       	subi	r16, 0xFC	; 252
 404:	1f 4f       	sbci	r17, 0xFF	; 255
 406:	08 c0       	rjmp	.+16     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 408:	60 81       	ld	r22, Z
 40a:	71 81       	ldd	r23, Z+1	; 0x01
 40c:	07 2e       	mov	r0, r23
 40e:	00 0c       	add	r0, r0
 410:	88 0b       	sbc	r24, r24
 412:	99 0b       	sbc	r25, r25
 414:	0e 5f       	subi	r16, 0xFE	; 254
 416:	1f 4f       	sbci	r17, 0xFF	; 255
 418:	2f 76       	andi	r18, 0x6F	; 111
 41a:	72 2e       	mov	r7, r18
 41c:	97 ff       	sbrs	r25, 7
 41e:	09 c0       	rjmp	.+18     	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 420:	90 95       	com	r25
 422:	80 95       	com	r24
 424:	70 95       	com	r23
 426:	61 95       	neg	r22
 428:	7f 4f       	sbci	r23, 0xFF	; 255
 42a:	8f 4f       	sbci	r24, 0xFF	; 255
 42c:	9f 4f       	sbci	r25, 0xFF	; 255
 42e:	20 68       	ori	r18, 0x80	; 128
 430:	72 2e       	mov	r7, r18
 432:	2a e0       	ldi	r18, 0x0A	; 10
 434:	30 e0       	ldi	r19, 0x00	; 0
 436:	a4 01       	movw	r20, r8
 438:	0e 94 3d 03 	call	0x67a	; 0x67a <__ultoa_invert>
 43c:	a8 2e       	mov	r10, r24
 43e:	a8 18       	sub	r10, r8
 440:	44 c0       	rjmp	.+136    	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 442:	85 37       	cpi	r24, 0x75	; 117
 444:	29 f4       	brne	.+10     	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 446:	2f 7e       	andi	r18, 0xEF	; 239
 448:	b2 2e       	mov	r11, r18
 44a:	2a e0       	ldi	r18, 0x0A	; 10
 44c:	30 e0       	ldi	r19, 0x00	; 0
 44e:	25 c0       	rjmp	.+74     	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
 450:	f2 2f       	mov	r31, r18
 452:	f9 7f       	andi	r31, 0xF9	; 249
 454:	bf 2e       	mov	r11, r31
 456:	8f 36       	cpi	r24, 0x6F	; 111
 458:	c1 f0       	breq	.+48     	; 0x48a <__LOCK_REGION_LENGTH__+0x8a>
 45a:	18 f4       	brcc	.+6      	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 45c:	88 35       	cpi	r24, 0x58	; 88
 45e:	79 f0       	breq	.+30     	; 0x47e <__LOCK_REGION_LENGTH__+0x7e>
 460:	b4 c0       	rjmp	.+360    	; 0x5ca <__LOCK_REGION_LENGTH__+0x1ca>
 462:	80 37       	cpi	r24, 0x70	; 112
 464:	19 f0       	breq	.+6      	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
 466:	88 37       	cpi	r24, 0x78	; 120
 468:	21 f0       	breq	.+8      	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
 46a:	af c0       	rjmp	.+350    	; 0x5ca <__LOCK_REGION_LENGTH__+0x1ca>
 46c:	2f 2f       	mov	r18, r31
 46e:	20 61       	ori	r18, 0x10	; 16
 470:	b2 2e       	mov	r11, r18
 472:	b4 fe       	sbrs	r11, 4
 474:	0d c0       	rjmp	.+26     	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
 476:	8b 2d       	mov	r24, r11
 478:	84 60       	ori	r24, 0x04	; 4
 47a:	b8 2e       	mov	r11, r24
 47c:	09 c0       	rjmp	.+18     	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
 47e:	24 ff       	sbrs	r18, 4
 480:	0a c0       	rjmp	.+20     	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
 482:	9f 2f       	mov	r25, r31
 484:	96 60       	ori	r25, 0x06	; 6
 486:	b9 2e       	mov	r11, r25
 488:	06 c0       	rjmp	.+12     	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
 48a:	28 e0       	ldi	r18, 0x08	; 8
 48c:	30 e0       	ldi	r19, 0x00	; 0
 48e:	05 c0       	rjmp	.+10     	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
 490:	20 e1       	ldi	r18, 0x10	; 16
 492:	30 e0       	ldi	r19, 0x00	; 0
 494:	02 c0       	rjmp	.+4      	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
 496:	20 e1       	ldi	r18, 0x10	; 16
 498:	32 e0       	ldi	r19, 0x02	; 2
 49a:	f8 01       	movw	r30, r16
 49c:	b7 fe       	sbrs	r11, 7
 49e:	07 c0       	rjmp	.+14     	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
 4a0:	60 81       	ld	r22, Z
 4a2:	71 81       	ldd	r23, Z+1	; 0x01
 4a4:	82 81       	ldd	r24, Z+2	; 0x02
 4a6:	93 81       	ldd	r25, Z+3	; 0x03
 4a8:	0c 5f       	subi	r16, 0xFC	; 252
 4aa:	1f 4f       	sbci	r17, 0xFF	; 255
 4ac:	06 c0       	rjmp	.+12     	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
 4ae:	60 81       	ld	r22, Z
 4b0:	71 81       	ldd	r23, Z+1	; 0x01
 4b2:	80 e0       	ldi	r24, 0x00	; 0
 4b4:	90 e0       	ldi	r25, 0x00	; 0
 4b6:	0e 5f       	subi	r16, 0xFE	; 254
 4b8:	1f 4f       	sbci	r17, 0xFF	; 255
 4ba:	a4 01       	movw	r20, r8
 4bc:	0e 94 3d 03 	call	0x67a	; 0x67a <__ultoa_invert>
 4c0:	a8 2e       	mov	r10, r24
 4c2:	a8 18       	sub	r10, r8
 4c4:	fb 2d       	mov	r31, r11
 4c6:	ff 77       	andi	r31, 0x7F	; 127
 4c8:	7f 2e       	mov	r7, r31
 4ca:	76 fe       	sbrs	r7, 6
 4cc:	0b c0       	rjmp	.+22     	; 0x4e4 <__LOCK_REGION_LENGTH__+0xe4>
 4ce:	37 2d       	mov	r19, r7
 4d0:	3e 7f       	andi	r19, 0xFE	; 254
 4d2:	a5 14       	cp	r10, r5
 4d4:	50 f4       	brcc	.+20     	; 0x4ea <__LOCK_REGION_LENGTH__+0xea>
 4d6:	74 fe       	sbrs	r7, 4
 4d8:	0a c0       	rjmp	.+20     	; 0x4ee <__LOCK_REGION_LENGTH__+0xee>
 4da:	72 fc       	sbrc	r7, 2
 4dc:	08 c0       	rjmp	.+16     	; 0x4ee <__LOCK_REGION_LENGTH__+0xee>
 4de:	37 2d       	mov	r19, r7
 4e0:	3e 7e       	andi	r19, 0xEE	; 238
 4e2:	05 c0       	rjmp	.+10     	; 0x4ee <__LOCK_REGION_LENGTH__+0xee>
 4e4:	ba 2c       	mov	r11, r10
 4e6:	37 2d       	mov	r19, r7
 4e8:	03 c0       	rjmp	.+6      	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
 4ea:	ba 2c       	mov	r11, r10
 4ec:	01 c0       	rjmp	.+2      	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
 4ee:	b5 2c       	mov	r11, r5
 4f0:	34 ff       	sbrs	r19, 4
 4f2:	0d c0       	rjmp	.+26     	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
 4f4:	fe 01       	movw	r30, r28
 4f6:	ea 0d       	add	r30, r10
 4f8:	f1 1d       	adc	r31, r1
 4fa:	80 81       	ld	r24, Z
 4fc:	80 33       	cpi	r24, 0x30	; 48
 4fe:	11 f4       	brne	.+4      	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
 500:	39 7e       	andi	r19, 0xE9	; 233
 502:	09 c0       	rjmp	.+18     	; 0x516 <__LOCK_REGION_LENGTH__+0x116>
 504:	32 ff       	sbrs	r19, 2
 506:	06 c0       	rjmp	.+12     	; 0x514 <__LOCK_REGION_LENGTH__+0x114>
 508:	b3 94       	inc	r11
 50a:	b3 94       	inc	r11
 50c:	04 c0       	rjmp	.+8      	; 0x516 <__LOCK_REGION_LENGTH__+0x116>
 50e:	83 2f       	mov	r24, r19
 510:	86 78       	andi	r24, 0x86	; 134
 512:	09 f0       	breq	.+2      	; 0x516 <__LOCK_REGION_LENGTH__+0x116>
 514:	b3 94       	inc	r11
 516:	33 fd       	sbrc	r19, 3
 518:	13 c0       	rjmp	.+38     	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
 51a:	30 ff       	sbrs	r19, 0
 51c:	06 c0       	rjmp	.+12     	; 0x52a <__LOCK_REGION_LENGTH__+0x12a>
 51e:	5a 2c       	mov	r5, r10
 520:	b3 14       	cp	r11, r3
 522:	18 f4       	brcc	.+6      	; 0x52a <__LOCK_REGION_LENGTH__+0x12a>
 524:	53 0c       	add	r5, r3
 526:	5b 18       	sub	r5, r11
 528:	b3 2c       	mov	r11, r3
 52a:	b3 14       	cp	r11, r3
 52c:	68 f4       	brcc	.+26     	; 0x548 <__LOCK_REGION_LENGTH__+0x148>
 52e:	b7 01       	movw	r22, r14
 530:	80 e2       	ldi	r24, 0x20	; 32
 532:	90 e0       	ldi	r25, 0x00	; 0
 534:	3c 87       	std	Y+12, r19	; 0x0c
 536:	0e 94 05 03 	call	0x60a	; 0x60a <fputc>
 53a:	b3 94       	inc	r11
 53c:	3c 85       	ldd	r19, Y+12	; 0x0c
 53e:	f5 cf       	rjmp	.-22     	; 0x52a <__LOCK_REGION_LENGTH__+0x12a>
 540:	b3 14       	cp	r11, r3
 542:	10 f4       	brcc	.+4      	; 0x548 <__LOCK_REGION_LENGTH__+0x148>
 544:	3b 18       	sub	r3, r11
 546:	01 c0       	rjmp	.+2      	; 0x54a <__LOCK_REGION_LENGTH__+0x14a>
 548:	31 2c       	mov	r3, r1
 54a:	34 ff       	sbrs	r19, 4
 54c:	12 c0       	rjmp	.+36     	; 0x572 <__LOCK_REGION_LENGTH__+0x172>
 54e:	b7 01       	movw	r22, r14
 550:	80 e3       	ldi	r24, 0x30	; 48
 552:	90 e0       	ldi	r25, 0x00	; 0
 554:	3c 87       	std	Y+12, r19	; 0x0c
 556:	0e 94 05 03 	call	0x60a	; 0x60a <fputc>
 55a:	3c 85       	ldd	r19, Y+12	; 0x0c
 55c:	32 ff       	sbrs	r19, 2
 55e:	17 c0       	rjmp	.+46     	; 0x58e <__LOCK_REGION_LENGTH__+0x18e>
 560:	31 fd       	sbrc	r19, 1
 562:	03 c0       	rjmp	.+6      	; 0x56a <__LOCK_REGION_LENGTH__+0x16a>
 564:	88 e7       	ldi	r24, 0x78	; 120
 566:	90 e0       	ldi	r25, 0x00	; 0
 568:	02 c0       	rjmp	.+4      	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
 56a:	88 e5       	ldi	r24, 0x58	; 88
 56c:	90 e0       	ldi	r25, 0x00	; 0
 56e:	b7 01       	movw	r22, r14
 570:	0c c0       	rjmp	.+24     	; 0x58a <__LOCK_REGION_LENGTH__+0x18a>
 572:	83 2f       	mov	r24, r19
 574:	86 78       	andi	r24, 0x86	; 134
 576:	59 f0       	breq	.+22     	; 0x58e <__LOCK_REGION_LENGTH__+0x18e>
 578:	31 ff       	sbrs	r19, 1
 57a:	02 c0       	rjmp	.+4      	; 0x580 <__LOCK_REGION_LENGTH__+0x180>
 57c:	8b e2       	ldi	r24, 0x2B	; 43
 57e:	01 c0       	rjmp	.+2      	; 0x582 <__LOCK_REGION_LENGTH__+0x182>
 580:	80 e2       	ldi	r24, 0x20	; 32
 582:	37 fd       	sbrc	r19, 7
 584:	8d e2       	ldi	r24, 0x2D	; 45
 586:	b7 01       	movw	r22, r14
 588:	90 e0       	ldi	r25, 0x00	; 0
 58a:	0e 94 05 03 	call	0x60a	; 0x60a <fputc>
 58e:	a5 14       	cp	r10, r5
 590:	38 f4       	brcc	.+14     	; 0x5a0 <__LOCK_REGION_LENGTH__+0x1a0>
 592:	b7 01       	movw	r22, r14
 594:	80 e3       	ldi	r24, 0x30	; 48
 596:	90 e0       	ldi	r25, 0x00	; 0
 598:	0e 94 05 03 	call	0x60a	; 0x60a <fputc>
 59c:	5a 94       	dec	r5
 59e:	f7 cf       	rjmp	.-18     	; 0x58e <__LOCK_REGION_LENGTH__+0x18e>
 5a0:	aa 94       	dec	r10
 5a2:	f4 01       	movw	r30, r8
 5a4:	ea 0d       	add	r30, r10
 5a6:	f1 1d       	adc	r31, r1
 5a8:	80 81       	ld	r24, Z
 5aa:	b7 01       	movw	r22, r14
 5ac:	90 e0       	ldi	r25, 0x00	; 0
 5ae:	0e 94 05 03 	call	0x60a	; 0x60a <fputc>
 5b2:	a1 10       	cpse	r10, r1
 5b4:	f5 cf       	rjmp	.-22     	; 0x5a0 <__LOCK_REGION_LENGTH__+0x1a0>
 5b6:	33 20       	and	r3, r3
 5b8:	09 f4       	brne	.+2      	; 0x5bc <__LOCK_REGION_LENGTH__+0x1bc>
 5ba:	51 ce       	rjmp	.-862    	; 0x25e <vfprintf+0x24>
 5bc:	b7 01       	movw	r22, r14
 5be:	80 e2       	ldi	r24, 0x20	; 32
 5c0:	90 e0       	ldi	r25, 0x00	; 0
 5c2:	0e 94 05 03 	call	0x60a	; 0x60a <fputc>
 5c6:	3a 94       	dec	r3
 5c8:	f6 cf       	rjmp	.-20     	; 0x5b6 <__LOCK_REGION_LENGTH__+0x1b6>
 5ca:	f7 01       	movw	r30, r14
 5cc:	86 81       	ldd	r24, Z+6	; 0x06
 5ce:	97 81       	ldd	r25, Z+7	; 0x07
 5d0:	02 c0       	rjmp	.+4      	; 0x5d6 <__LOCK_REGION_LENGTH__+0x1d6>
 5d2:	8f ef       	ldi	r24, 0xFF	; 255
 5d4:	9f ef       	ldi	r25, 0xFF	; 255
 5d6:	2c 96       	adiw	r28, 0x0c	; 12
 5d8:	e2 e1       	ldi	r30, 0x12	; 18
 5da:	0c 94 b7 03 	jmp	0x76e	; 0x76e <__epilogue_restores__>

000005de <strnlen_P>:
 5de:	fc 01       	movw	r30, r24
 5e0:	05 90       	lpm	r0, Z+
 5e2:	61 50       	subi	r22, 0x01	; 1
 5e4:	70 40       	sbci	r23, 0x00	; 0
 5e6:	01 10       	cpse	r0, r1
 5e8:	d8 f7       	brcc	.-10     	; 0x5e0 <strnlen_P+0x2>
 5ea:	80 95       	com	r24
 5ec:	90 95       	com	r25
 5ee:	8e 0f       	add	r24, r30
 5f0:	9f 1f       	adc	r25, r31
 5f2:	08 95       	ret

000005f4 <strnlen>:
 5f4:	fc 01       	movw	r30, r24
 5f6:	61 50       	subi	r22, 0x01	; 1
 5f8:	70 40       	sbci	r23, 0x00	; 0
 5fa:	01 90       	ld	r0, Z+
 5fc:	01 10       	cpse	r0, r1
 5fe:	d8 f7       	brcc	.-10     	; 0x5f6 <strnlen+0x2>
 600:	80 95       	com	r24
 602:	90 95       	com	r25
 604:	8e 0f       	add	r24, r30
 606:	9f 1f       	adc	r25, r31
 608:	08 95       	ret

0000060a <fputc>:
 60a:	0f 93       	push	r16
 60c:	1f 93       	push	r17
 60e:	cf 93       	push	r28
 610:	df 93       	push	r29
 612:	fb 01       	movw	r30, r22
 614:	23 81       	ldd	r18, Z+3	; 0x03
 616:	21 fd       	sbrc	r18, 1
 618:	03 c0       	rjmp	.+6      	; 0x620 <fputc+0x16>
 61a:	8f ef       	ldi	r24, 0xFF	; 255
 61c:	9f ef       	ldi	r25, 0xFF	; 255
 61e:	28 c0       	rjmp	.+80     	; 0x670 <fputc+0x66>
 620:	22 ff       	sbrs	r18, 2
 622:	16 c0       	rjmp	.+44     	; 0x650 <fputc+0x46>
 624:	46 81       	ldd	r20, Z+6	; 0x06
 626:	57 81       	ldd	r21, Z+7	; 0x07
 628:	24 81       	ldd	r18, Z+4	; 0x04
 62a:	35 81       	ldd	r19, Z+5	; 0x05
 62c:	42 17       	cp	r20, r18
 62e:	53 07       	cpc	r21, r19
 630:	44 f4       	brge	.+16     	; 0x642 <fputc+0x38>
 632:	a0 81       	ld	r26, Z
 634:	b1 81       	ldd	r27, Z+1	; 0x01
 636:	9d 01       	movw	r18, r26
 638:	2f 5f       	subi	r18, 0xFF	; 255
 63a:	3f 4f       	sbci	r19, 0xFF	; 255
 63c:	31 83       	std	Z+1, r19	; 0x01
 63e:	20 83       	st	Z, r18
 640:	8c 93       	st	X, r24
 642:	26 81       	ldd	r18, Z+6	; 0x06
 644:	37 81       	ldd	r19, Z+7	; 0x07
 646:	2f 5f       	subi	r18, 0xFF	; 255
 648:	3f 4f       	sbci	r19, 0xFF	; 255
 64a:	37 83       	std	Z+7, r19	; 0x07
 64c:	26 83       	std	Z+6, r18	; 0x06
 64e:	10 c0       	rjmp	.+32     	; 0x670 <fputc+0x66>
 650:	eb 01       	movw	r28, r22
 652:	09 2f       	mov	r16, r25
 654:	18 2f       	mov	r17, r24
 656:	00 84       	ldd	r0, Z+8	; 0x08
 658:	f1 85       	ldd	r31, Z+9	; 0x09
 65a:	e0 2d       	mov	r30, r0
 65c:	09 95       	icall
 65e:	89 2b       	or	r24, r25
 660:	e1 f6       	brne	.-72     	; 0x61a <fputc+0x10>
 662:	8e 81       	ldd	r24, Y+6	; 0x06
 664:	9f 81       	ldd	r25, Y+7	; 0x07
 666:	01 96       	adiw	r24, 0x01	; 1
 668:	9f 83       	std	Y+7, r25	; 0x07
 66a:	8e 83       	std	Y+6, r24	; 0x06
 66c:	81 2f       	mov	r24, r17
 66e:	90 2f       	mov	r25, r16
 670:	df 91       	pop	r29
 672:	cf 91       	pop	r28
 674:	1f 91       	pop	r17
 676:	0f 91       	pop	r16
 678:	08 95       	ret

0000067a <__ultoa_invert>:
 67a:	fa 01       	movw	r30, r20
 67c:	aa 27       	eor	r26, r26
 67e:	28 30       	cpi	r18, 0x08	; 8
 680:	51 f1       	breq	.+84     	; 0x6d6 <__ultoa_invert+0x5c>
 682:	20 31       	cpi	r18, 0x10	; 16
 684:	81 f1       	breq	.+96     	; 0x6e6 <__ultoa_invert+0x6c>
 686:	e8 94       	clt
 688:	6f 93       	push	r22
 68a:	6e 7f       	andi	r22, 0xFE	; 254
 68c:	6e 5f       	subi	r22, 0xFE	; 254
 68e:	7f 4f       	sbci	r23, 0xFF	; 255
 690:	8f 4f       	sbci	r24, 0xFF	; 255
 692:	9f 4f       	sbci	r25, 0xFF	; 255
 694:	af 4f       	sbci	r26, 0xFF	; 255
 696:	b1 e0       	ldi	r27, 0x01	; 1
 698:	3e d0       	rcall	.+124    	; 0x716 <__ultoa_invert+0x9c>
 69a:	b4 e0       	ldi	r27, 0x04	; 4
 69c:	3c d0       	rcall	.+120    	; 0x716 <__ultoa_invert+0x9c>
 69e:	67 0f       	add	r22, r23
 6a0:	78 1f       	adc	r23, r24
 6a2:	89 1f       	adc	r24, r25
 6a4:	9a 1f       	adc	r25, r26
 6a6:	a1 1d       	adc	r26, r1
 6a8:	68 0f       	add	r22, r24
 6aa:	79 1f       	adc	r23, r25
 6ac:	8a 1f       	adc	r24, r26
 6ae:	91 1d       	adc	r25, r1
 6b0:	a1 1d       	adc	r26, r1
 6b2:	6a 0f       	add	r22, r26
 6b4:	71 1d       	adc	r23, r1
 6b6:	81 1d       	adc	r24, r1
 6b8:	91 1d       	adc	r25, r1
 6ba:	a1 1d       	adc	r26, r1
 6bc:	20 d0       	rcall	.+64     	; 0x6fe <__ultoa_invert+0x84>
 6be:	09 f4       	brne	.+2      	; 0x6c2 <__ultoa_invert+0x48>
 6c0:	68 94       	set
 6c2:	3f 91       	pop	r19
 6c4:	2a e0       	ldi	r18, 0x0A	; 10
 6c6:	26 9f       	mul	r18, r22
 6c8:	11 24       	eor	r1, r1
 6ca:	30 19       	sub	r19, r0
 6cc:	30 5d       	subi	r19, 0xD0	; 208
 6ce:	31 93       	st	Z+, r19
 6d0:	de f6       	brtc	.-74     	; 0x688 <__ultoa_invert+0xe>
 6d2:	cf 01       	movw	r24, r30
 6d4:	08 95       	ret
 6d6:	46 2f       	mov	r20, r22
 6d8:	47 70       	andi	r20, 0x07	; 7
 6da:	40 5d       	subi	r20, 0xD0	; 208
 6dc:	41 93       	st	Z+, r20
 6de:	b3 e0       	ldi	r27, 0x03	; 3
 6e0:	0f d0       	rcall	.+30     	; 0x700 <__ultoa_invert+0x86>
 6e2:	c9 f7       	brne	.-14     	; 0x6d6 <__ultoa_invert+0x5c>
 6e4:	f6 cf       	rjmp	.-20     	; 0x6d2 <__ultoa_invert+0x58>
 6e6:	46 2f       	mov	r20, r22
 6e8:	4f 70       	andi	r20, 0x0F	; 15
 6ea:	40 5d       	subi	r20, 0xD0	; 208
 6ec:	4a 33       	cpi	r20, 0x3A	; 58
 6ee:	18 f0       	brcs	.+6      	; 0x6f6 <__ultoa_invert+0x7c>
 6f0:	49 5d       	subi	r20, 0xD9	; 217
 6f2:	31 fd       	sbrc	r19, 1
 6f4:	40 52       	subi	r20, 0x20	; 32
 6f6:	41 93       	st	Z+, r20
 6f8:	02 d0       	rcall	.+4      	; 0x6fe <__ultoa_invert+0x84>
 6fa:	a9 f7       	brne	.-22     	; 0x6e6 <__ultoa_invert+0x6c>
 6fc:	ea cf       	rjmp	.-44     	; 0x6d2 <__ultoa_invert+0x58>
 6fe:	b4 e0       	ldi	r27, 0x04	; 4
 700:	a6 95       	lsr	r26
 702:	97 95       	ror	r25
 704:	87 95       	ror	r24
 706:	77 95       	ror	r23
 708:	67 95       	ror	r22
 70a:	ba 95       	dec	r27
 70c:	c9 f7       	brne	.-14     	; 0x700 <__ultoa_invert+0x86>
 70e:	00 97       	sbiw	r24, 0x00	; 0
 710:	61 05       	cpc	r22, r1
 712:	71 05       	cpc	r23, r1
 714:	08 95       	ret
 716:	9b 01       	movw	r18, r22
 718:	ac 01       	movw	r20, r24
 71a:	0a 2e       	mov	r0, r26
 71c:	06 94       	lsr	r0
 71e:	57 95       	ror	r21
 720:	47 95       	ror	r20
 722:	37 95       	ror	r19
 724:	27 95       	ror	r18
 726:	ba 95       	dec	r27
 728:	c9 f7       	brne	.-14     	; 0x71c <__ultoa_invert+0xa2>
 72a:	62 0f       	add	r22, r18
 72c:	73 1f       	adc	r23, r19
 72e:	84 1f       	adc	r24, r20
 730:	95 1f       	adc	r25, r21
 732:	a0 1d       	adc	r26, r0
 734:	08 95       	ret

00000736 <__prologue_saves__>:
 736:	2f 92       	push	r2
 738:	3f 92       	push	r3
 73a:	4f 92       	push	r4
 73c:	5f 92       	push	r5
 73e:	6f 92       	push	r6
 740:	7f 92       	push	r7
 742:	8f 92       	push	r8
 744:	9f 92       	push	r9
 746:	af 92       	push	r10
 748:	bf 92       	push	r11
 74a:	cf 92       	push	r12
 74c:	df 92       	push	r13
 74e:	ef 92       	push	r14
 750:	ff 92       	push	r15
 752:	0f 93       	push	r16
 754:	1f 93       	push	r17
 756:	cf 93       	push	r28
 758:	df 93       	push	r29
 75a:	cd b7       	in	r28, 0x3d	; 61
 75c:	de b7       	in	r29, 0x3e	; 62
 75e:	ca 1b       	sub	r28, r26
 760:	db 0b       	sbc	r29, r27
 762:	0f b6       	in	r0, 0x3f	; 63
 764:	f8 94       	cli
 766:	de bf       	out	0x3e, r29	; 62
 768:	0f be       	out	0x3f, r0	; 63
 76a:	cd bf       	out	0x3d, r28	; 61
 76c:	09 94       	ijmp

0000076e <__epilogue_restores__>:
 76e:	2a 88       	ldd	r2, Y+18	; 0x12
 770:	39 88       	ldd	r3, Y+17	; 0x11
 772:	48 88       	ldd	r4, Y+16	; 0x10
 774:	5f 84       	ldd	r5, Y+15	; 0x0f
 776:	6e 84       	ldd	r6, Y+14	; 0x0e
 778:	7d 84       	ldd	r7, Y+13	; 0x0d
 77a:	8c 84       	ldd	r8, Y+12	; 0x0c
 77c:	9b 84       	ldd	r9, Y+11	; 0x0b
 77e:	aa 84       	ldd	r10, Y+10	; 0x0a
 780:	b9 84       	ldd	r11, Y+9	; 0x09
 782:	c8 84       	ldd	r12, Y+8	; 0x08
 784:	df 80       	ldd	r13, Y+7	; 0x07
 786:	ee 80       	ldd	r14, Y+6	; 0x06
 788:	fd 80       	ldd	r15, Y+5	; 0x05
 78a:	0c 81       	ldd	r16, Y+4	; 0x04
 78c:	1b 81       	ldd	r17, Y+3	; 0x03
 78e:	aa 81       	ldd	r26, Y+2	; 0x02
 790:	b9 81       	ldd	r27, Y+1	; 0x01
 792:	ce 0f       	add	r28, r30
 794:	d1 1d       	adc	r29, r1
 796:	0f b6       	in	r0, 0x3f	; 63
 798:	f8 94       	cli
 79a:	de bf       	out	0x3e, r29	; 62
 79c:	0f be       	out	0x3f, r0	; 63
 79e:	cd bf       	out	0x3d, r28	; 61
 7a0:	ed 01       	movw	r28, r26
 7a2:	08 95       	ret

000007a4 <_exit>:
 7a4:	f8 94       	cli

000007a6 <__stop_program>:
 7a6:	ff cf       	rjmp	.-2      	; 0x7a6 <__stop_program>
